#version: '3.8'

services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: productdemo-chromadb
    ports:
      - "${CHROMADB_HOST_PORT:-8001}:${CHROMADB_CONTAINER_PORT:-8000}"
    volumes:
      - ./DATA/chroma_data:/chroma/chroma
    environment:
      - ALLOW_RESET=true
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=*
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=${CHROMADB_CONTAINER_PORT:-8000}
    restart: unless-stopped
    networks:
      - productdemo-network

  redis:
    image: redis:7-alpine
    container_name: productdemo-redis
    ports:
      - "${REDIS_HOST_PORT:-6379}:${REDIS_CONTAINER_PORT:-6379}"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - productdemo-network

  embedding-service:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.embedding-service
    container_name: productdemo-embedding-service
    ports:
      - "${EMBEDDING_HOST_PORT:-3579}:${EMBEDDING_CONTAINER_PORT:-3579}"
    volumes:
      - embedding_models:/app/models
    restart: unless-stopped
    networks:
      - productdemo-network

  doc-workers:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.workers
    container_name: productdemo-doc-workers
    depends_on:
      - redis
      - chromadb
      - embedding-service
      - text-processor
      - mcp-orchestrator
    volumes:
      - ../DATA:/app/DATA
      - ../python:/app/python
      - ../conf:/app/conf
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_CONTAINER_PORT:-6379}
      - CHROMADB_URL=http://chromadb:${CHROMADB_CONTAINER_PORT:-8000}
      - EMBEDDING_SERVICE_URL=http://embedding-service:${EMBEDDING_CONTAINER_PORT:-3579}
      - TEXT_PROCESSOR_URL=http://text-processor:${TEXT_PROCESSOR_PORT:-3580}
      # Use host IP for PostgreSQL
      - DATABASE_HOST=172.17.0.1
      - OLLAMA_HOST=172.17.0.1
    restart: unless-stopped
    networks:
      - productdemo-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  text-processor:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.text-processor
    container_name: productdemo-text-processor
    ports:
      - "${TEXT_PROCESSOR_PORT:-3580}:3580"
    volumes:
      - ../DATA:/app/data
    restart: unless-stopped
    networks:
      - productdemo-network
    tmpfs:
      - /tmp/uploads:exec

  mcp-orchestrator:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.mcp-orchestrator
    container_name: productdemo-mcp-orchestrator
    ports:
      - "${MCP_ORCHESTRATOR_PORT:-3581}:3581"
    volumes:
      - ../python:/app/python
    restart: unless-stopped
    networks:
      - productdemo-network

  app:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.app
    container_name: productdemo-app
    ports:
      - "${APP_PORT:-5640}:5640"
    volumes:
      - ../DATA:/app/DATA
      - ../logs:/app/logs
      - ../conf:/app/conf
      - ../assets:/app/assets
    depends_on:
      - redis
      - chromadb
      - embedding-service
      - text-processor
      - mcp-orchestrator
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_CONTAINER_PORT:-6379}
      - CHROMADB_URL=http://chromadb:${CHROMADB_CONTAINER_PORT:-8000}
      - EMBEDDING_SERVICE_URL=http://embedding-service:${EMBEDDING_CONTAINER_PORT:-3579}
      - TEXT_PROCESSOR_URL=http://text-processor:${TEXT_PROCESSOR_PORT:-3580}
      - MCP_ORCHESTRATOR_URL=http://mcp-orchestrator:${MCP_ORCHESTRATOR_PORT:-3581}
      # Use host IP for PostgreSQL and Ollama
      - DATABASE_HOST=172.17.0.1
      - OLLAMA_HOST=172.17.0.1
    restart: unless-stopped
    networks:
      - productdemo-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  redis_data:
  embedding_models:

networks:
  productdemo-network:
    driver: bridge


