{
  "documentId": 22,
  "model": "nomic-embed-text",
  "dimensions": 768,
  "count": 234,
  "timestamp": "2025-05-02T09:12:15.440Z",
  "chunks": [
    {
      "text": "var\nVariables in Python**\nA variable is a name that stores a value in memory. You can think of it as a box where you\nstore information.\nvariable_name = value\nname = \"Trishant\" age = 22 height = 5.9 is_hacker = True\n Here, \nname\n, \nage\n, \nheight\n, and \nis_hacker\n are variables storing different types of values.\nData Types in Python\nPython automatically assigns a data type to a variable based on the value stored. Here are the\nmain types:\nData TypeExampleUse Case\nstr\n (String)\n\"hello\"\nStoring text (names, messages)\nint\n (Integer)\n42\nCounting, loops, indexing\nfloat\n (Floating Point)\n3.14\nStoring decimal numbers (height, weight)\nbool\n (Boolean)\nTrue\n, \nFalse\nConditional checks (\nif\n statements)\n\nList + Dictionary\nLists: Ordered Collection of Items\n Definition:\nList ek ordered collection hoti hai jo multiple values store kar sakti hai. Ye mutable hoti hai\n(iska data change ho sakta hai).\nhack\nlist_name = [item1, item2, item3, ...]\nhack_tools = [\"Nmap\", \"Burp Suite\", \"Metasploit\",",
      "startIndex": 0,
      "endIndex": 991,
      "length": 988,
      "embeddingIndex": 0
    },
    {
      "text": "ion hoti hai jo multiple values store kar sakti hai. Ye mutable hoti hai\n(iska data change ho sakta hai).\nhack\nlist_name = [item1, item2, item3, ...]\nhack_tools = [\"Nmap\", \"Burp Suite\", \"Metasploit\", \"Wireshark\"] print(hack_tools)\n List Operations\n['Nmap', 'Aircrack-ng', 'Metasploit', 'Wireshark', 'SQLmap']\n Use Case:\n Jab ek list of items store karni ho, jaise ports, usernames, IPs.\n Dictionaries: Key-Value Pairs\n# Accessing Elements print(hack_tools[0])   # 'Nmap'  (First element) \nprint(hack_tools[-1])  # 'Wireshark' (Last element)  \n# Modifying List \nhack_tools.append(\"SQLmap\")  # Add element \nhack_tools.remove(\"Burp Suite\") \n# Remove element\nhack_tools[1] = \"Aircrack-ng\"  # Modify element  print(hack_tools)\n\n Definition:\nDictionaries key-value pairs store karti hain. Iska use structured data rakhne ke liye hota hai,\njaise user info, settings, or response data.\ndict_name = {\"key1\": value1, \"key2\": value2, ...}\n Dictionary Operations\npython\nCopy code\n# Accessing Values",
      "startIndex": 791,
      "endIndex": 1778,
      "length": 986,
      "embeddingIndex": 1
    },
    {
      "text": "use structured data rakhne ke liye hota hai,\njaise user info, settings, or response data.\ndict_name = {\"key1\": value1, \"key2\": value2, ...}\n Dictionary Operations\npython\nCopy code\n# Accessing Values print(hacker_info[\"name\"]) # 'CyberGhost'\nprint(hacker_info[\"skills\"]) # ['Pentesting', 'Scripting', 'Exploit Dev'] #\nModifying Dictionary hacker_info[\"experience\"] = \"3 Years\" # Add new key\nhacker_info[\"age\"] = 23 # Update value del hacker_info[\"certified\"] # Delete key\nprint(hacker_info)\n Output:\n{'name': 'CyberGhost', 'skills': ['Pentesting', 'Scripting', 'Exploit Dev'],\n'age': 23, 'experience': '3 Years'}\n Use Case:\n Jab kisi entity ke details store karni ho, jaise user credentials, config files, JSON API\nresponses.\n`hacker_info = {   \n\"name\": \"CyberGhost\",    \n\"skills\": [\"Pentesting\", \"Scripting\", \"Exploit Dev\"],    \n\"age\": 22,     \"certified\": True \n} \nprint(hacker_info)\n`\n#output\n`{'name': 'CyberGhost', 'skills': ['Pentesting', 'Scripting', 'Exploit Dev'],\n'age': 22, 'certified':",
      "startIndex": 1578,
      "endIndex": 2576,
      "length": 996,
      "embeddingIndex": 2
    },
    {
      "text": "Scripting\", \"Exploit Dev\"],    \n\"age\": 22,     \"certified\": True \n} \nprint(hacker_info)\n`\n#output\n`{'name': 'CyberGhost', 'skills': ['Pentesting', 'Scripting', 'Exploit Dev'],\n'age': 22, 'certified': True}`\n\n Difference Between List & Dictionary\nFeatureListDictionary\nData TypeOrdered CollectionKey-Value Pairs\nIndexingNumeric (\nlist[0]\n)Key-based (\ndict[\"key\"]\n)\nMutabilityMutableMutable\nBest ForStoring multiple valuesStoring structured data\n Practice Challenge\n`ports = [80, 443, 22, 8080] \nnetwork_info = {\"IP\": \"192.168.1.1\", \"Open_Ports\": ports}  \nprint(network_info[\"IP\"]) \nprint(network_info[\"Open_Ports\"][1])`\n\narthmetic\n1. Arithmetic Operators \n Use hota hai maths calculations me\n Use Case:\n Password hashing me exponents ka use hota hai (\nx ** y\n).\n Modulo use hota hai even-odd check me (\nx % 2\n).\na = 10\nb = 3\nprint(a + b)  # 13 (Addition)\nprint(a - b)  # 7  (Subtraction)\nprint(a * b)  # 30 (Multiplication)\nprint(a / b)  # 3.333 (Division)\nprint(a // b) # 3 (Floor Division - integer result)--->returns without .",
      "startIndex": 2376,
      "endIndex": 3405,
      "length": 1028,
      "embeddingIndex": 3
    },
    {
      "text": "(a + b)  # 13 (Addition)\nprint(a - b)  # 7  (Subtraction)\nprint(a * b)  # 30 (Multiplication)\nprint(a / b)  # 3.333 (Division)\nprint(a // b) # 3 (Floor Division - integer result)--->returns without . like\n2.46 =2\nprint(a % b)  # 1 (Modulo - remainder)\nprint(a ** b) # 1000 (Exponent - Power)\n\nlogical\n3. Logical Operators \n Boolean values (True/False) ke sath kaam karte hain\nprint(a and b) # False (Dono true hone chahiye)\n Use Case:\n Multiple conditions check karne ke liye jaise \nif user == \"admin\" and\npassword_correct\n.\na = True\nb = False\nprint(a or b)   # True  (Koi ek true ho)\nprint(not a)    # False (Negation)\n\nID operator\nIdentity Operators \n Check karta hai ki do variables same memory location point kar rahe hain ya nahi\n Use Case:\n Object comparison me use hota hai, jaise cache data validation.\n`a = [1, 2, 3] b = a  # Both point to same list  print(a is b)  # True (Same\nobject) print(a is not b)  # False`\n\ncomparision\nvalue compare karne k liye\n Login System me password check karne ke liye (\nentered_pass == stored_pass\n).",
      "startIndex": 3205,
      "endIndex": 4248,
      "length": 1042,
      "embeddingIndex": 4
    },
    {
      "text": "nt to same list  print(a is b)  # True (Same\nobject) print(a is not b)  # False`\n\ncomparision\nvalue compare karne k liye\n Login System me password check karne ke liye (\nentered_pass == stored_pass\n).\nx = 10\ny = 5\nprint(x == y)  # False (Equal)\nprint(x != y)  # True  (Not Equal)\nprint(x > y)   # True  (Greater than)\nprint(x < y)   # False (Less than)\nprint(x >= y)  # True  (Greater or Equal)\nprint(x <= y)  # False (Less or Equal)\n\nBITWISE OPERATORS\nBitwise Operators  (For Advanced Users)\n Binary level pe operations perform karta hai\n Use Case:\n Encryption & compression algorithms me use hota hai.\nx = 5  # 101 in binary y = 3  # 011 in binary  print(x & y)  # 1  (AND) \nprint(x | y)  # 7  (OR) \nprint(x ^ y)  # 6  (XOR) \nprint(~x)     # -6 (NOT) |\nprint(x << 1) # 10 (Left Shift)\nprint(x >> 1) # 2  (Right Shift)`\n\nMEMBERSHIP\n Check karta hai ki koi value list ya string me hai ya nahi\n Use Case:\n Dictionary me key check karne ke liye (\nif \"username\" in user_data:\n).",
      "startIndex": 4048,
      "endIndex": 5023,
      "length": 974,
      "embeddingIndex": 5
    },
    {
      "text": "eft Shift)\nprint(x >> 1) # 2  (Right Shift)`\n\nMEMBERSHIP\n Check karta hai ki koi value list ya string me hai ya nahi\n Use Case:\n Dictionary me key check karne ke liye (\nif \"username\" in user_data:\n).\npython\nCopyEdit\n`hack_tools = [\"Nmap\", \"Burp Suite\", \"Metasploit\"]  print(\"Nmap\" in\nhack_tools)    # True print(\"Wireshark\" not in hack_tools)  # True`\n\nPRACTICE\nFALSE\nx = 8\ny = 3\nresult = (x % y == 2) and (x // y > 2)\nprint(result)\n\nbasics\nSequence = Ek ordered collection jisme multiple values hoti hain. (e.g., \nlist\n, \nstring\n,\ntuple\n, \nrange\n)\nIterate = Ek-ek karke har element par kaam karna. (Loop ke andar sequence ke\nelements ko access karna)\n\nMINI-PROJECT\npin = 1234\nentered_pin = int(input(\"Enter your PIN: \"))\nif entered_pin == pin:\nprint(\" Access Granted! Welcome.\")\nelse:\nprint(\" Incorrect PIN! Try again.\")\n\nBASIC\nif\nJab sirf ek condition check karni ho\nif-else\nJab ek \nTrue\n aur ek \nFalse\n case ho\nif-elif-else\nJab multiple conditions check karni ho\nNested if\nJab ek \nif\n ke andar aur",
      "startIndex": 4823,
      "endIndex": 5824,
      "length": 1000,
      "embeddingIndex": 6
    },
    {
      "text": "ct PIN! Try again.\")\n\nBASIC\nif\nJab sirf ek condition check karni ho\nif-else\nJab ek \nTrue\n aur ek \nFalse\n case ho\nif-elif-else\nJab multiple conditions check karni ho\nNested if\nJab ek \nif\n ke andar aur \nif\n lagana ho\nConditional StatementUse Case\nIF-ELSE\nIF-ELIF-ELSE\nage = 20\nif age >= 18:\nprint(\"You are eligible to vote!\")\nage = 16\nif age >= 18:\nprint(\"You are eligible to vote!\")\nelse:\nprint(\"You are NOT eligible to vote!\")\nmarks = 75\nif marks >= 90:\nprint(\"Grade: A\")\nelif marks >= 70:\nprint(\"Grade: B\")\nelif marks >= 50:\nprint(\"Grade: C\")\nelse:\n\nNESTED IF-ELSE\nprint(\"Grade: F\")\nage = 20\nhas_voter_id = True\nif age >= 18:\nif has_voter_id:\nprint(\"You can vote!\")\nelse:\nprint(\"Get your voter ID first!\")\nelse:\nprint(\"You are too young to vote!\")\n\nCONTROL STATEMENTS\nStatementExplanation\nbreak\nLoop ko turant stop kar deta hai\ncontinue\nCurrent iteration skip karta hai, loop continue rahta hai\npass\nKuch nahi karta, bas syntax error se bachne ke liye\nBREAK\nCONTINUE\nPASS\nQuick Recap\nfor i in",
      "startIndex": 5624,
      "endIndex": 6618,
      "length": 993,
      "embeddingIndex": 7
    },
    {
      "text": "k\nLoop ko turant stop kar deta hai\ncontinue\nCurrent iteration skip karta hai, loop continue rahta hai\npass\nKuch nahi karta, bas syntax error se bachne ke liye\nBREAK\nCONTINUE\nPASS\nQuick Recap\nfor i in range(1, 6):\nif i == 3:\nbreak  # Loop yaha ruk jayega\nprint(i)\nfor i in range(1, 6):\nif i == 3:\ncontinue  # 3 skip ho jayega\nprint(i)\nfor i in range(1, 6):\nif i == 3:\npass  # Yeh kuch nahi karega, bas syntax error se bachne ke liye\nprint(i)\n\nLoop TypeUse Case\nfor\n loopJab kisi sequence (list, range, string) pe iterate karna ho\nwhile\n loopJab condition true hone tak loop chalana ho\nNested loops\nJab ek loop ke andar doosra loop chalana ho\nbreak\nLoop ko turant exit karne ke liye\ncontinue\nCurrent iteration skip karne ke liye\npass\nPlaceholder statement, kuch nahi karta\nPRO TIPS ---->>>>>>\nLoop \nType\nUse Case (Hacking)\nfor\n loopJab fixed repetitions pata ho, jaise brute force attack, wordlist processing, \nport scanning \nwhile\n \nloop\nJab condition-based repetition ho, jaise infinite reverse",
      "startIndex": 6418,
      "endIndex": 7413,
      "length": 994,
      "embeddingIndex": 8
    },
    {
      "text": "Type\nUse Case (Hacking)\nfor\n loopJab fixed repetitions pata ho, jaise brute force attack, wordlist processing, \nport scanning \nwhile\n \nloop\nJab condition-based repetition ho, jaise infinite reverse shell, continuous \nlistener, login attempts \n\nfor loop\nwith list\nwith string\nH\nA\nC\nK\nE\nR\nWITH RANGE FUNCTION\nFOR PARTICULAR RANGE TAK LOOP CHLANA NA HO\nfor variable in sequence:\n# Loop body (yeh har iteration pe chalega)\nfruits = [\"apple\", \"banana\", \"mango\"]\nfor fruit in fruits:\nprint(fruit)\nfor char in \"HACKER\":\nprint(char)\nfor i in range(1, 6):  # 1 se 5 tak chalega\nprint(i)\n\nWhile LOOP\nPERFECT EXAMPLE\nwhile condition:\n# Loop body (yeh tab tak chalega jab tak condition True hai)\nx = 1\nwhile x <= 5:\nprint(x)\nx += 1  # x = x + 1 (Loop counter update karna zaroori hai!)\npassword = \"hacker123\"\nuser_input = \"\"\nwhile user_input != password:\nuser_input = input(\"Enter password: \")\nprint(\" Access Granted!\")\n\nfuntions and args and parameter\n 1.",
      "startIndex": 7213,
      "endIndex": 8160,
      "length": 944,
      "embeddingIndex": 9
    },
    {
      "text": "r update karna zaroori hai!)\npassword = \"hacker123\"\nuser_input = \"\"\nwhile user_input != password:\nuser_input = input(\"Enter password: \")\nprint(\" Access Granted!\")\n\nfuntions and args and parameter\n 1. Function Basics - Definition & Calling\nFunction ek reusable code block hota hai jo ek specific kaam karta hai.\n Function define karna:\ndef greet(): print(\"Hello, Hacker!\") # Function ka kaam\nParameters vs Arguments\n Parameters: Function define karte waqt jo variables use hote hain.\n Arguments: Function call karte waqt jo values pass karte hain.\nVariable-Length Arguments (\n*args\n & `kwargs`)**\nJab tu nahi pata kitne arguments milenge, tab use karte hain.\n*args\n (Multiple Positional Arguments)\n**kwargs\n (Multiple Keyword Arguments)\ndef greet(name):  # 'name' yahan parameter hai\nprint(f\"Hello, {name}!\")  \nprint(f\"Hello, {name}!\")  \ngreet(\"Trishant\")  # 'Trishant' argument hai\ndef ports_scan(*ports):\nfor port in ports:\nprint(f\"Scanning port {port}...\")\nports_scan(22, 80, 443)  \n\nReturn",
      "startIndex": 7960,
      "endIndex": 8953,
      "length": 992,
      "embeddingIndex": 10
    },
    {
      "text": "llo, {name}!\")  \nprint(f\"Hello, {name}!\")  \ngreet(\"Trishant\")  # 'Trishant' argument hai\ndef ports_scan(*ports):\nfor port in ports:\nprint(f\"Scanning port {port}...\")\nports_scan(22, 80, 443)  \n\nReturn Statement (Function Ka Output Wapas\nBhejna)\nAgar function ka output kisi aur function me use karna ho toh \nreturn\n ka use hota hai.\ndef user_info(**info):\nfor key, value in info.items():\nprint(f\"{key}: {value}\")\nuser_info(name=\"Hacker\", skill=\"Cybersecurity\", level=\"Advanced\")\ndef multiply(x, y):\nreturn x * y  \nresult = multiply(4, 3)\nprint(result)  # Output: 12\n\nError Handling\nAgar tu chahta hai ki koi bhi error ho ya na ho, ek specific part hamesha chale, toh\nfinally\n use hota hai.\ntry:\n# Risky Code (Jisme error aa sakta hai)\nexcept Exception as e:\n# Error handle karna\ntry:\nprint(\"Trying...\")\nx = 10 / 2\nexcept Exception as e:\nprint(f\"Error: {e}\")\nfinally:\nprint(\"This will always run!\")\n\nopen and reading\nwith open()\n Statement in Python\nPython me \nwith open()\n statement ek best practice hai file handling ke liye.",
      "startIndex": 8753,
      "endIndex": 9779,
      "length": 1025,
      "embeddingIndex": 11
    },
    {
      "text": "ion as e:\nprint(f\"Error: {e}\")\nfinally:\nprint(\"This will always run!\")\n\nopen and reading\nwith open()\n Statement in Python\nPython me \nwith open()\n statement ek best practice hai file handling ke liye.\nAuto-close karta hai file ko, chahe program crash ho ya nahi.\n \nclose()\n manually likhne ki zaroorat nahi hoti.\n Safe & clean code hota hai.\nwrite file\nRead file\nAppend file\nwith open(\"filename.txt\", \"mode\") as file:\n# File operations\nwith open(\"hacker.txt\", \"w\") as f:\nf.write(\"Hacking is fun!\\n\")\nwith open(\"hacker.txt\", \"r\") as f:\ncontent = f.read()\nprint(content)\nwith open(\"logs.txt\", \"a\") as f:\nf.write(\"New login attempt detected!\\n\")\n\nBasic port scan in threading\nwe could do this too--------->\nimport socket\nimport threading\ndef scan_port(ip, port):\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.settimeout(1)\nresult = s.connect_ex((ip, port))\ns.close()\nif result == 0:\nprint(f\"port {port} is open\")\nelse:\nprint(f\"port {port} is closed\")\nDomain = input(\"enter target ip or",
      "startIndex": 9579,
      "endIndex": 10571,
      "length": 991,
      "embeddingIndex": 12
    },
    {
      "text": "socket.SOCK_STREAM)\ns.settimeout(1)\nresult = s.connect_ex((ip, port))\ns.close()\nif result == 0:\nprint(f\"port {port} is open\")\nelse:\nprint(f\"port {port} is closed\")\nDomain = input(\"enter target ip or domain:\")\ntarget_ip = socket.gethostbyname(Domain)\nprint(f\"target ip is {target_ip}\")\ndef threaded_scan():\nthreads = []\nfor port in range(21, 1024):\nt = threading.Thread(target=scan_port, args=(target_ip, port))\nt.start()\nthreads.append(t)\nfor t in threads:\nt.join()\nprint(\"port scan complete\")\nthreaded_scan()\n\nThreading Ka Kya Faayda Hua?\n Ports ek saath scan ho rahe hain (Parallel Execution)\n Speed fast ho gayi, pehle ek ek port scan hota tha ab saare parallel scan ho rahe hain\n Bruteforce, Enumeration, Scanning ke liye useful hai\n Word by Word Breakdown\n \nthreading.Thread(target=scan_port, args=(target_ip, port))\ntarget=scan_port → \nscan_port()\n function ko execute karega\nargs=(target_ip, port) → \nscan_port()\n function ko IP aur port pass kar raha hai\n \nt.start()\nThread start hota hai jo",
      "startIndex": 10371,
      "endIndex": 11372,
      "length": 999,
      "embeddingIndex": 13
    },
    {
      "text": "gs=(target_ip, port))\ntarget=scan_port → \nscan_port()\n function ko execute karega\nargs=(target_ip, port) → \nscan_port()\n function ko IP aur port pass kar raha hai\n \nt.start()\nThread start hota hai jo \nscan_port(ip, port)\n execute karta hai\nport_list = [21,22,80,443,8080]\ndef threaded_scan():\nthreads = []\nfor port in port_list:\nt = threading.Thread(target=scan_port, args=(target_ip, port))\nt.start()\nthreads.append(t)\nfor t in threads:\nt.join()\nprint(\"port scan complete\")\nthreaded_scan()\nport_list = [21,22,80,443,8080]\n\n \nthreads.append(t)\nThread list me add ho raha hai taaki baad me \njoin()\n kar sakein\n \nt.join()\nSaare threads complete hone tak wait karta hai\n Breakdown of \ns.connect_ex((ip, port))\n and \n(target_ip, port)\n Tumhara sawal:\nKya \ns.connect_ex((ip, port))\n jaruri hai?\ntarget_ip\n aur \nport\n kahaan se aa rahe hain?\nChalo ek ek karke clear karte hain.\n \ns.connect_ex((ip, port))\n Ka Matlab Kya Hai?",
      "startIndex": 11172,
      "endIndex": 12091,
      "length": 918,
      "embeddingIndex": 14
    },
    {
      "text": "t_ip, port)\n Tumhara sawal:\nKya \ns.connect_ex((ip, port))\n jaruri hai?\ntarget_ip\n aur \nport\n kahaan se aa rahe hain?\nChalo ek ek karke clear karte hain.\n \ns.connect_ex((ip, port))\n Ka Matlab Kya Hai?\n \ns.connect_ex((ip, port))\n ek function hai jo check karta hai ki port open hai ya close.\n Ye ek alternative hai \ns.connect()\n ka jo error throw nahi karta (Isliye prefer karte hain).\n Ye \n0\n return karega agar connection successful ho (port open ho).\n Ye \n1\n ya koi aur error code return karega agar connection fail ho (port closed ho).\n\ncomplete portscan using threading\nimport socket\nimport threading\ndef port_scan(ip, port, file_name):\ntry:\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.settimeout(1)\nresult = s.connect_ex((ip, port))\ns.close()\nif result == 0:\noutput = f\"port {port} is open\\n\"\nwith open(file_name, \"a\") as f:\nf.write(output)\nprint(output)\nexcept Exception as e:\nprint(f\"[] Error scanning port {port}: {e}\")\ntarget = input(\" Enter Target (IP/Domain):",
      "startIndex": 11891,
      "endIndex": 12873,
      "length": 981,
      "embeddingIndex": 15
    },
    {
      "text": "= f\"port {port} is open\\n\"\nwith open(file_name, \"a\") as f:\nf.write(output)\nprint(output)\nexcept Exception as e:\nprint(f\"[] Error scanning port {port}: {e}\")\ntarget = input(\" Enter Target (IP/Domain): \").strip()\nport_choice = input(\" Enter Ports (defaults=1-1024) or comma-separated list:\n\").strip()\nfile_name = input(\" Enter file name to save results: \").strip()\ntry:\ntarget_ip = socket.gethostbyname(target)\nprint(f\" Target is {target_ip} ({target})\")\nexcept Exception as e:\nprint(f\" Error: Unable to resolve target: {target}.\")\nexit()\nif port_choice:\ntry:\nport_list = [int(p) for p in port_choice.split(\",\") if p.isdigit()]\nexcept Exception as e:\nprint(f\" Invalid port input. Using default (1-1024).\")\n\nstrip() ka use?\ntarget = input(\" Enter Target (IP/Domain): \").strip()\n Problem: Jab user input deta hai, toh kabhi kabhi extra spaces aa jati hain:\nscanme.nmap.org\nIsme shuru ya end me spaces rahengi, jo error de sakti hain.",
      "startIndex": 12673,
      "endIndex": 13603,
      "length": 929,
      "embeddingIndex": 16
    },
    {
      "text": "input(\" Enter Target (IP/Domain): \").strip()\n Problem: Jab user input deta hai, toh kabhi kabhi extra spaces aa jati hain:\nscanme.nmap.org\nIsme shuru ya end me spaces rahengi, jo error de sakti hain.\n .strip() un extra spaces ko remove karta hai.\n \" hello \".strip() → \"hello\"\n \" scanme.nmap.org \".strip() → \"scanme.nmap.org\"\n Jaruri nahi hai, but best practice hai.\n Ye line ka full explanation (Port Parsing)\nif port_choice:\ntry:\nport_list = [int(p) for p in port_choice.split(\",\") if p.isdigit()]\nport_list = range(1, 1024)\nelse:\nport_list = range(1, 1024)\nwith open(file_name, \"w\") as f:\nf.write(f\" Scan Results for {target} ({target_ip})\\n\")\nf.write(\"=\" * 50 + \"\\n\")\ndef threaded_scan():\nthreads = []\nfor port in port_list:\nt = threading.Thread(target=port_scan, args=(target_ip, port,\nfile_name))\nt.daemon = True\nt.start()\nthreads.append(t)\nfor t in threads:\nt.join()\nprint(f\" Port scan complete.",
      "startIndex": 13403,
      "endIndex": 14305,
      "length": 901,
      "embeddingIndex": 17
    },
    {
      "text": "[]\nfor port in port_list:\nt = threading.Thread(target=port_scan, args=(target_ip, port,\nfile_name))\nt.daemon = True\nt.start()\nthreads.append(t)\nfor t in threads:\nt.join()\nprint(f\" Port scan complete. Results saved to {file_name}\")\nthreaded_scan()\n\npython\nCopyEdit\nexcept ValueError: print(\" Invalid port input. Using default (1-65535).\")\nport_list = range(1, 65536)\n  Ye kya kar raha hai?\n User agar comma-separated ports de (ex: \"22,80,443\"), toh usko list me convert karna hai.\n Step-by-Step Breakdown:\nport_choice.split(\",\") → String ko comma , pe todta hai\n \"22,80,443\".split(\",\") → [\"22\", \"80\", \"443\"]\nList comprehension se saare items int me convert kar raha hai:\n[int(p) for p in port_choice.split(\",\") if p.isdigit()]\n \"22\" → 22, \"80\" → 80, \"443\" → 443\n Agar koi non-numeric value ho toh ignore karega (like \"abc\" hata dega)\nAgar error aaye (jaise \"22,abc,443\" me \"abc\" issue kare), toh full range use karega:\nexcept ValueError:\nprint(\" Invalid port input.",
      "startIndex": 14105,
      "endIndex": 15070,
      "length": 964,
      "embeddingIndex": 18
    },
    {
      "text": "r koi non-numeric value ho toh ignore karega (like \"abc\" hata dega)\nAgar error aaye (jaise \"22,abc,443\" me \"abc\" issue kare), toh full range use karega:\nexcept ValueError:\nprint(\" Invalid port input. Using default (1-65535).\")\nport_list = range(1, 65536)\n Invalid input ka check + default value\n Jaruri hai?\n Haan, kyunki ye user input ko properly handle karta hai, nahi toh program crash ho sakta\nhai.\n Ye f.write(\"=\" * 40 + \"\\n\") kya kar raha hai?\nf.write(\"=\" 40 + \"\\n\")\n Ek line me = ka 40 baar repetition bana raha hai.\n \"=\" 40 → \"========================================\"\n Purpose? File me output clean aur readable dikh sake.\n File ka output aisa dikhega:\n Scan Results for scanme.nmap.org (45.33.32.156)\n\n[] Port 22 is OPEN\n[] Port 80 is OPEN\n[] Port 443 is OPEN\n Jaruri hai?\n Nahi, sirf formatting ke liye hai.\n Ye t.daemon = True kya hai?\nt.daemon = True\n Daemon threads background me kaam karte hain, bina program ko block kiye.",
      "startIndex": 14870,
      "endIndex": 15809,
      "length": 938,
      "embeddingIndex": 19
    },
    {
      "text": "80 is OPEN\n[] Port 443 is OPEN\n Jaruri hai?\n Nahi, sirf formatting ke liye hai.\n Ye t.daemon = True kya hai?\nt.daemon = True\n Daemon threads background me kaam karte hain, bina program ko block kiye.\n Example:\nTum main thread me ho, aur tumhara port scanner multiple threads bana raha hai.\nAgar main program exit ho jaye, toh normal threads chalte rahenge aur program hang ho sakta\nhai.\nDaemon threads automatically terminate ho jaate hain agar main program exit ho jaye.\noutput variable banana zaroori tha kya?\nCode:\noutput = f\"port {port} is open\\n\"\nwith open(\"file\", \"a\") as f:\nf.write(output)\nprint(output)\n Doubt: Kya directly f.write() nahi kar sakte? output variable zaroori hai kya?\n Answer:\nDirect likh sakte ho, output banana compulsory nahi hai. Yeh sirf readability improve karne ke\nliye kiya gaya hai.\n \"a\" mode kyun use kiya, \"w\" kyun nahi?\n\"a\" (append mode) isliye use kiya gaya hai taaki naye results purani file ke content ko delete na\nkarein.",
      "startIndex": 15609,
      "endIndex": 16570,
      "length": 960,
      "embeddingIndex": 20
    },
    {
      "text": "sirf readability improve karne ke\nliye kiya gaya hai.\n \"a\" mode kyun use kiya, \"w\" kyun nahi?\n\"a\" (append mode) isliye use kiya gaya hai taaki naye results purani file ke content ko delete na\nkarein.\nAgar \"w\" use karte toh purana data delete ho jata.\nExample:\nwith open(\"file\", \"w\") as f: # Yeh har baar purana content delete karega\nf.write(f\"port {port} is open\\n\")\n \"w\" sirf tab use karo jab purani file overwrite karni ho.\n \"a\" use karo jab naya data add karna ho bina purana delete kiye.\n\nmtlb aesa h jese phle hum ip lete phir port bgra phir hum file name lete h ek file create krte h w\nse or header likhte h phir portscan run hota h and file mai save hota hai.\nToh use kese pta konsa file mai save krna hai? Iska connection jo phle file bnayi usse kese?\n Kaise Pata Chalta Hai Ki Konsi File Me Save Karna Hai?\nSimple logic hai bhai!\nJab file create hoti hai (w mode) tab user se file ka naam input le chuke hote hain.",
      "startIndex": 16370,
      "endIndex": 17294,
      "length": 923,
      "embeddingIndex": 21
    },
    {
      "text": "ction jo phle file bnayi usse kese?\n Kaise Pata Chalta Hai Ki Konsi File Me Save Karna Hai?\nSimple logic hai bhai!\nJab file create hoti hai (w mode) tab user se file ka naam input le chuke hote hain.\nPhir har port scan hone par wahi file_name function me pass kar dete hain.\nFinal Flow (Ekdam Simple Tarika)\n User se file_name le lo.\n w mode se ek baar file create karke header likh do.\n port_scan() function ko wahi file_name pass karo.\n a mode se baar-baar open ports append karte raho.\n Pehle file create hui, phir scan hone ke baad usi me results save hote gaye. \n\nDemo Process\nLinux Version\nwindows version ---------->>>>>>>>>>\nimport subprocess\n# Command ko run karna (ls -l)\nsubprocess.run([\"ls\", \"-l\"])\n#   Background me ping command chalana\np = subprocess.Popen(\"ping 8.8.8.8\", shell=True)\nprint(\"Ping running in background...\")\n#  Process list ko print karna\nout = subprocess.getoutput(\"ps -aux\")\nprint(out)\nimport subprocess\n# Command ko run karna (dir)\nsubprocess.run([\"cmd\", \"/c\",",
      "startIndex": 17094,
      "endIndex": 18088,
      "length": 993,
      "embeddingIndex": 22
    },
    {
      "text": "rue)\nprint(\"Ping running in background...\")\n#  Process list ko print karna\nout = subprocess.getoutput(\"ps -aux\")\nprint(out)\nimport subprocess\n# Command ko run karna (dir)\nsubprocess.run([\"cmd\", \"/c\", \"dir\"])\n# Background me ping command chalana\np = subprocess.Popen(\"ping 8.8.8.8 -t\", shell=True)\nprint(\"Ping running in background...\")\n# Process list ko print karna (tasklist)\nout = subprocess.getoutput(\"tasklist\")\nprint(out)\n\nfind and kill proc\nlinux version ---------->>>\nWindows version ----->>\nimport subprocess\nimport os\n# \"ping\" process ka PID nikalna\nout = subprocess.getoutput(\"pgrep ping\")\npids = out.split()\n# Har process ko forcefully kill karna\nfor pid in pids:\nos.system(f\"kill -9 {pid}\")\nprint(\"Ping process killed successfully!\")\nimport subprocess\nimport os\n# Process ka naam ke basis pe PID find karna\noutput = subprocess.check_output('wmic process where \"name=\\'notepad.exe\\'\"\nget ProcessId', shell=True)\npids = [pid for pid in output.decode().split() if pid.isdigit()]\n# Har PID ko",
      "startIndex": 17888,
      "endIndex": 18889,
      "length": 1000,
      "embeddingIndex": 23
    },
    {
      "text": "pe PID find karna\noutput = subprocess.check_output('wmic process where \"name=\\'notepad.exe\\'\"\nget ProcessId', shell=True)\npids = [pid for pid in output.decode().split() if pid.isdigit()]\n# Har PID ko forcefully kill karna\nfor pid in pids:\nos.system(f\"taskkill /PID {pid} /F\")\nprint(\"Notepad process killed successfully!\")\n\nget,auth and post\nget ------->>>>\npost --------->>>>>>>\nimport requests\n# User se URL input lena\nurl = input(\"Enter a URL: \").strip()\n# Request bhejna\nresponse = requests.get(url)\n# Response details print karna\nprint(f\"Status Code: {response.status_code}\")\nprint(f\"Headers:\\n{response.headers}\")\nprint(f\"Content:\\n{response.text}\")\nimport requests\n# User se URL input lena\nurl = input(\"Enter a URL (e.g., https://site.com): \").strip()\n# Credentials ya form data define karna\ncred = {\n\"username\": \"test\",\n\"password\": \"test\"\n}\n# POST request bhejna\nresponse = requests.post(url, data=cred)\n\nAuth ------>>>>>>>>>>>>>\nafter login, if we want to access the page,like dashboard",
      "startIndex": 18689,
      "endIndex": 19684,
      "length": 994,
      "embeddingIndex": 24
    },
    {
      "text": "na\ncred = {\n\"username\": \"test\",\n\"password\": \"test\"\n}\n# POST request bhejna\nresponse = requests.post(url, data=cred)\n\nAuth ------>>>>>>>>>>>>>\nafter login, if we want to access the page,like dashboard profile etc\nthen we need to send the cookies to the server\nust because we are sending the cookies, we dont need to send the credentials\npost request is not required\n# Response details print karna\nprint(f\"Status Code: {response.status_code}\")\nprint(f\"Headers:\\n{response.headers}\")\nprint(f\"Content:\\n{response.text}\")\nimport requests\n# User se URL input lena\nurl = input(\"Enter the URL: \").strip()\n# Headers define karna\nheaders = {\n\"Content-Type\": \"application/json\",\n\"User-Agent\": \"Mozilla/5.0\"\n}\n# Cookies define karna\ncookies = {\n\"sessionid\": \"1234\",\n\"csrftoken\": \"abcd\"\n}\n# GET request bhejna (headers & cookies ke sath)\nresponse = requests.get(url, headers=headers, cookies=cookies)\n# Response details print karna\nprint(f\"Status Code:",
      "startIndex": 19484,
      "endIndex": 20424,
      "length": 939,
      "embeddingIndex": 25
    },
    {
      "text": "nid\": \"1234\",\n\"csrftoken\": \"abcd\"\n}\n# GET request bhejna (headers & cookies ke sath)\nresponse = requests.get(url, headers=headers, cookies=cookies)\n# Response details print karna\nprint(f\"Status Code: {response.status_code}\")\n\nprint(f\"Content:\\n{response.content}\")\nprint(f\"Text:\\n{response.text}\")\n\nport scanner\ncomplete portscan using threading <<<<<<<<<<<<<---------------------- links\nimport socket\nimport threading\nimport sys\nimport readline #for using arrow key for reading lines\ndef port_scan(ip, port, file_name):\ntry:\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.settimeout(1)\nresult = s.connect_ex((ip, port))\ns.close()\nif result == 0:\noutput= f\"port {port} is open\\n\"\nwith open(file_name, \"a\") as f:\nf.write(output)\nprint(output)\nexcept Exception as e:\nprint(f\"[] Error scanning port {port}: {e}\")\ntry:\ntarget = input(\" Enter Target (IP/Domain): \").strip()\nport_choice = input(\" Enter Ports (defaults=1-1024) or coma-separated\nlist:\").strip()\nfile_name = input(\" Enter file Name",
      "startIndex": 20224,
      "endIndex": 21224,
      "length": 999,
      "embeddingIndex": 26
    },
    {
      "text": "port {port}: {e}\")\ntry:\ntarget = input(\" Enter Target (IP/Domain): \").strip()\nport_choice = input(\" Enter Ports (defaults=1-1024) or coma-separated\nlist:\").strip()\nfile_name = input(\" Enter file Name to save results :\").strip()\ntry:\ntarget_ip = socket.gethostbyname(target)\nprint(f\" target is {target_ip} ({target})\")\n\nexcept Exception as e:\nprint(f\" Error: Unable to resolve target: {target}.\")\nexit()\nif port_choice:\ntry:\nport_list = [int(p) for p in port_choice.split(\",\") if\np.isdigit()]\nexcept Exception as e:\nprint(f\" Invalid port input. Using default (1-1024).\")\nport_list = range(1, 1024)\nelse: \nport_list = range(1, 1024)\nwith open(file_name, \"w\") as f:\nf.write(f\" Scan Results for {target} ({target_ip})\\n\")\nf.write(\"=\" * 50 + \"\\n\")\ndef threaded_scan():\nthreads = []\nfor port in port_list:\nt = threading.Thread(target=port_scan, args=(target_ip,\nport,file_name))\nt.daemon =  True\nt.start()\nthreads.append(t)\nfor t in threads:\nt.join()\nprint(f\" Port scan complete.",
      "startIndex": 21024,
      "endIndex": 21998,
      "length": 973,
      "embeddingIndex": 27
    },
    {
      "text": "[]\nfor port in port_list:\nt = threading.Thread(target=port_scan, args=(target_ip,\nport,file_name))\nt.daemon =  True\nt.start()\nthreads.append(t)\nfor t in threads:\nt.join()\nprint(f\" Port scan complete. Results saved to {file_name}\")\nthreaded_scan()\n\nexcept KeyboardInterrupt:\nprint(\"\\n[] Scan Interrupted! Exiting... \")\nprint(\" Happy Hacking! \")\nsys.exit(0)\nexcept Exception as e:\nprint(f\" unexpected error : {e}\")\n\ndirenum\nfor the code this is link ---->directory scanner\nimport requests\nimport queue\nimport sys\nimport threading\nimport readline\ndomain = input(\"enter the domain name:\").strip()\nwordlist_file =input(\"enter the the wordlist name: \").strip()\noutput_file = input(\"enter where you want to save\").strip()\nwith open(output_file, \"w\") as file:\nfile.write(f\" Result for the domain :{domain}\\n\")\nfile.write(\"==\" * 50 + \"\\n\")\nq =queue.Queue()\ndef check_directories():\nwhile not q.empty():\ndir = q.get()\nurl = f\"https://{domain}/{dir}\"\nif not dir or",
      "startIndex": 21798,
      "endIndex": 22753,
      "length": 953,
      "embeddingIndex": 28
    },
    {
      "text": "e.write(f\" Result for the domain :{domain}\\n\")\nfile.write(\"==\" * 50 + \"\\n\")\nq =queue.Queue()\ndef check_directories():\nwhile not q.empty():\ndir = q.get()\nurl = f\"https://{domain}/{dir}\"\nif not dir or  dir.startswith(\"#\"):\nq.task_done()\ncontinue\ntry:\nresponse = requests.get(url,timeout=5)\nif response.status_code < 400:\nouts= f\"  == {dir} (status: {response.status_code}\"\nprint(outs)\nwith open(output_file, \"a\") as file:\nfile.write(outs + \"\\n\")\n\nexcept requests.RequestException:\npass\nq.task_done()\ntry:\ndef main():\ntry:\nwith open(wordlist_file, \"r\") as file:\ndirectories = [line.strip() for line in file.readlines()if\nline.strip() and not line.startswith(\"#\")]\n#[line.strip() for line in f.readlines()if\nline.strip() and not line.startswith(\"#\")]\n#[line.strip() for line in f.readlines()if\nline.strip() and not line startswith(\"#\")]\nexcept Exception as e:\nprint(f\"please provide correct wordlist: {e}\")\nreturn\nfor dir in directories:\nq.put(dir)\nthreads = []\ntry:\nnum_threads = int(input(\"enter",
      "startIndex": 22553,
      "endIndex": 23547,
      "length": 993,
      "embeddingIndex": 29
    },
    {
      "text": ".strip() and not line startswith(\"#\")]\nexcept Exception as e:\nprint(f\"please provide correct wordlist: {e}\")\nreturn\nfor dir in directories:\nq.put(dir)\nthreads = []\ntry:\nnum_threads = int(input(\"enter speed:\").strip())\nif num_threads<=0:\nraise ValueError(\"please provide between 1-10\")\nexcept ValueError:\nprint(\"enter between 1-10\")\nreturn\nfor s in range(num_threads):\ns = threading.Thread(target=check_directories)\nthreads.append(s)\n\ns.start()\nfor s in threads:\ns.join()\nprint(\"directory scan complete \")\nif __name__ == \"__main__\":\nmain()\nexcept KeyboardInterrupt:\nprint(\"\\n[] Scan Interrupted! Exiting... \")\nprint(\" Happy Hacking! \")\nsys.exit(0)\nexcept Exception as e:\nprint(f\" unexpected error : {e}\")\n\nsubdomain enum\nsubdomain <----------------------- link\nimport threading\nimport requests\nimport queue\nimport sys\nimport readline\nq = queue.Queue()\noutput_file =input(\"Enter file name to save results\").strip()\ndomain = input(\"Enter domain name:\").strip()\nwordlist = input(\"Enter worldist",
      "startIndex": 23347,
      "endIndex": 24338,
      "length": 990,
      "embeddingIndex": 30
    },
    {
      "text": "s\nimport queue\nimport sys\nimport readline\nq = queue.Queue()\noutput_file =input(\"Enter file name to save results\").strip()\ndomain = input(\"Enter domain name:\").strip()\nwordlist = input(\"Enter worldist file:\").strip()\ndef check_subdomain(domain):\nwhile not q.empty():\nsub =q.get()\nurl = f\"https://{sub}.{domain}\"\ntry:\nresponse =requests.get(url, timeout=3)\nif response.status_code < 400:\ndone = (f\"discovered domain : {url}\")\nprint(done)\nwith open(output_file, \"a\") as f:\nf.write(done +\"\\n\")\nexcept requests.RequestException:\npass \nq.task_done()\n\n###print(f\"we have these subdomains for you thanks for using sub_enum\")\ntry:\ndef main():\ntry:\nwith open(wordlist, \"r\") as f:\nsubdomains =[line.strip() for line in f.readlines()]\nexcept Exception as e:\nprint(f\"error is {e}\")\nprint(f\"please provide good wordlist line by lines thanks\")\nreturn\nfor sub in subdomains:\nq.put(sub)\nthreads = []\nnum_threads = int(input(\"enter speed:\"))\nfor s in range(num_threads):\ns =",
      "startIndex": 24138,
      "endIndex": 25095,
      "length": 956,
      "embeddingIndex": 31
    },
    {
      "text": "or is {e}\")\nprint(f\"please provide good wordlist line by lines thanks\")\nreturn\nfor sub in subdomains:\nq.put(sub)\nthreads = []\nnum_threads = int(input(\"enter speed:\"))\nfor s in range(num_threads):\ns = threading.Thread(target=check_subdomain,args=(domain,))\nthreads.append(s)\ns.start()\nfor s in threads:\ns.join()\nprint(\"scan complete\")\n\nif __name__ == \"__main__\":\nmain()\nexcept KeyboardInterrupt:\nprint(\"\\n[] Scan Interrupted! Exiting... \")\nprint(\" Happy Hacking! \")\nsys.exit(0)\n\nmain.py\nimport subprocess\nimport os\ndef main():\nprint(\"\"\"\n==================== GHOST RECON FRAMEWORK ==================\n1. Subdomain Enumeration\n2. Directory Enumeration\n3. Port Scanning\n=============================================================\n\"\"\")\ntry:\nchoice = input(\"Enter your choice (1-3): \").strip()\n# Set the working directory where 'modules' folder exists\nos.chdir('/home/ghost/Desktop/python4hackers/ghostrecon')\nif choice == \"1\":\nsubprocess.run([\"python\", os.path.join(\"modules\",\n\"subdomain_enum.py\")])\nelif",
      "startIndex": 24895,
      "endIndex": 25896,
      "length": 1000,
      "embeddingIndex": 32
    },
    {
      "text": "rking directory where 'modules' folder exists\nos.chdir('/home/ghost/Desktop/python4hackers/ghostrecon')\nif choice == \"1\":\nsubprocess.run([\"python\", os.path.join(\"modules\",\n\"subdomain_enum.py\")])\nelif choice == \"2\":\nsubprocess.run([\"python\", os.path.join(\"modules\", \"dir_enum.py\")])\nelif choice == \"3\":\nsubprocess.run([\"python\", os.path.join(\"modules\",\n\"port_scan.py\")])\nelse:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 25696,
      "endIndex": 26260,
      "length": 564,
      "embeddingIndex": 33
    },
    {
      "text": "y\")])\nelse:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26060,
      "endIndex": 26260,
      "length": 200,
      "embeddingIndex": 34
    },
    {
      "text": "\")])\nelse:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26061,
      "endIndex": 26260,
      "length": 199,
      "embeddingIndex": 35
    },
    {
      "text": ")])\nelse:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26062,
      "endIndex": 26260,
      "length": 198,
      "embeddingIndex": 36
    },
    {
      "text": "])\nelse:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26063,
      "endIndex": 26260,
      "length": 197,
      "embeddingIndex": 37
    },
    {
      "text": ")\nelse:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26064,
      "endIndex": 26260,
      "length": 196,
      "embeddingIndex": 38
    },
    {
      "text": "else:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26065,
      "endIndex": 26260,
      "length": 194,
      "embeddingIndex": 39
    },
    {
      "text": "else:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26066,
      "endIndex": 26260,
      "length": 194,
      "embeddingIndex": 40
    },
    {
      "text": "lse:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26067,
      "endIndex": 26260,
      "length": 193,
      "embeddingIndex": 41
    },
    {
      "text": "se:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26068,
      "endIndex": 26260,
      "length": 192,
      "embeddingIndex": 42
    },
    {
      "text": "e:\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26069,
      "endIndex": 26260,
      "length": 191,
      "embeddingIndex": 43
    },
    {
      "text": ":\nprint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26070,
      "endIndex": 26260,
      "length": 190,
      "embeddingIndex": 44
    },
    {
      "text": "print(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26071,
      "endIndex": 26260,
      "length": 188,
      "embeddingIndex": 45
    },
    {
      "text": "print(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26072,
      "endIndex": 26260,
      "length": 188,
      "embeddingIndex": 46
    },
    {
      "text": "rint(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26073,
      "endIndex": 26260,
      "length": 187,
      "embeddingIndex": 47
    },
    {
      "text": "int(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26074,
      "endIndex": 26260,
      "length": 186,
      "embeddingIndex": 48
    },
    {
      "text": "nt(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26075,
      "endIndex": 26260,
      "length": 185,
      "embeddingIndex": 49
    },
    {
      "text": "t(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26076,
      "endIndex": 26260,
      "length": 184,
      "embeddingIndex": 50
    },
    {
      "text": "(\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26077,
      "endIndex": 26260,
      "length": 183,
      "embeddingIndex": 51
    },
    {
      "text": "\" Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26078,
      "endIndex": 26260,
      "length": 182,
      "embeddingIndex": 52
    },
    {
      "text": "Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26079,
      "endIndex": 26260,
      "length": 180,
      "embeddingIndex": 53
    },
    {
      "text": "Invalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26080,
      "endIndex": 26260,
      "length": 180,
      "embeddingIndex": 54
    },
    {
      "text": "nvalid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26081,
      "endIndex": 26260,
      "length": 179,
      "embeddingIndex": 55
    },
    {
      "text": "valid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26082,
      "endIndex": 26260,
      "length": 178,
      "embeddingIndex": 56
    },
    {
      "text": "alid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26083,
      "endIndex": 26260,
      "length": 177,
      "embeddingIndex": 57
    },
    {
      "text": "lid Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26084,
      "endIndex": 26260,
      "length": 176,
      "embeddingIndex": 58
    },
    {
      "text": "id Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26085,
      "endIndex": 26260,
      "length": 175,
      "embeddingIndex": 59
    },
    {
      "text": "d Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26086,
      "endIndex": 26260,
      "length": 174,
      "embeddingIndex": 60
    },
    {
      "text": "Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26087,
      "endIndex": 26260,
      "length": 172,
      "embeddingIndex": 61
    },
    {
      "text": "Choice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26088,
      "endIndex": 26260,
      "length": 172,
      "embeddingIndex": 62
    },
    {
      "text": "hoice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26089,
      "endIndex": 26260,
      "length": 171,
      "embeddingIndex": 63
    },
    {
      "text": "oice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26090,
      "endIndex": 26260,
      "length": 170,
      "embeddingIndex": 64
    },
    {
      "text": "ice! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26091,
      "endIndex": 26260,
      "length": 169,
      "embeddingIndex": 65
    },
    {
      "text": "ce! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26092,
      "endIndex": 26260,
      "length": 168,
      "embeddingIndex": 66
    },
    {
      "text": "e! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26093,
      "endIndex": 26260,
      "length": 167,
      "embeddingIndex": 67
    },
    {
      "text": "! Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26094,
      "endIndex": 26260,
      "length": 166,
      "embeddingIndex": 68
    },
    {
      "text": "Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26095,
      "endIndex": 26260,
      "length": 164,
      "embeddingIndex": 69
    },
    {
      "text": "Please enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26096,
      "endIndex": 26260,
      "length": 164,
      "embeddingIndex": 70
    },
    {
      "text": "lease enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26097,
      "endIndex": 26260,
      "length": 163,
      "embeddingIndex": 71
    },
    {
      "text": "ease enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26098,
      "endIndex": 26260,
      "length": 162,
      "embeddingIndex": 72
    },
    {
      "text": "ase enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26099,
      "endIndex": 26260,
      "length": 161,
      "embeddingIndex": 73
    },
    {
      "text": "se enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26100,
      "endIndex": 26260,
      "length": 160,
      "embeddingIndex": 74
    },
    {
      "text": "e enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26101,
      "endIndex": 26260,
      "length": 159,
      "embeddingIndex": 75
    },
    {
      "text": "enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26102,
      "endIndex": 26260,
      "length": 157,
      "embeddingIndex": 76
    },
    {
      "text": "enter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26103,
      "endIndex": 26260,
      "length": 157,
      "embeddingIndex": 77
    },
    {
      "text": "nter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26104,
      "endIndex": 26260,
      "length": 156,
      "embeddingIndex": 78
    },
    {
      "text": "ter 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26105,
      "endIndex": 26260,
      "length": 155,
      "embeddingIndex": 79
    },
    {
      "text": "er 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26106,
      "endIndex": 26260,
      "length": 154,
      "embeddingIndex": 80
    },
    {
      "text": "r 1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26107,
      "endIndex": 26260,
      "length": 153,
      "embeddingIndex": 81
    },
    {
      "text": "1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26108,
      "endIndex": 26260,
      "length": 151,
      "embeddingIndex": 82
    },
    {
      "text": "1, 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26109,
      "endIndex": 26260,
      "length": 151,
      "embeddingIndex": 83
    },
    {
      "text": ", 2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26110,
      "endIndex": 26260,
      "length": 150,
      "embeddingIndex": 84
    },
    {
      "text": "2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26111,
      "endIndex": 26260,
      "length": 148,
      "embeddingIndex": 85
    },
    {
      "text": "2, or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26112,
      "endIndex": 26260,
      "length": 148,
      "embeddingIndex": 86
    },
    {
      "text": ", or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26113,
      "endIndex": 26260,
      "length": 147,
      "embeddingIndex": 87
    },
    {
      "text": "or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26114,
      "endIndex": 26260,
      "length": 145,
      "embeddingIndex": 88
    },
    {
      "text": "or 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26115,
      "endIndex": 26260,
      "length": 145,
      "embeddingIndex": 89
    },
    {
      "text": "r 3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26116,
      "endIndex": 26260,
      "length": 144,
      "embeddingIndex": 90
    },
    {
      "text": "3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26117,
      "endIndex": 26260,
      "length": 142,
      "embeddingIndex": 91
    },
    {
      "text": "3.\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26118,
      "endIndex": 26260,
      "length": 142,
      "embeddingIndex": 92
    },
    {
      "text": ".\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26119,
      "endIndex": 26260,
      "length": 141,
      "embeddingIndex": 93
    },
    {
      "text": "\")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26120,
      "endIndex": 26260,
      "length": 140,
      "embeddingIndex": 94
    },
    {
      "text": ")\nexcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26121,
      "endIndex": 26260,
      "length": 139,
      "embeddingIndex": 95
    },
    {
      "text": "except KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26122,
      "endIndex": 26260,
      "length": 137,
      "embeddingIndex": 96
    },
    {
      "text": "except KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26123,
      "endIndex": 26260,
      "length": 137,
      "embeddingIndex": 97
    },
    {
      "text": "xcept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26124,
      "endIndex": 26260,
      "length": 136,
      "embeddingIndex": 98
    },
    {
      "text": "cept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26125,
      "endIndex": 26260,
      "length": 135,
      "embeddingIndex": 99
    },
    {
      "text": "ept KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26126,
      "endIndex": 26260,
      "length": 134,
      "embeddingIndex": 100
    },
    {
      "text": "pt KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26127,
      "endIndex": 26260,
      "length": 133,
      "embeddingIndex": 101
    },
    {
      "text": "t KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26128,
      "endIndex": 26260,
      "length": 132,
      "embeddingIndex": 102
    },
    {
      "text": "KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26129,
      "endIndex": 26260,
      "length": 130,
      "embeddingIndex": 103
    },
    {
      "text": "KeyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26130,
      "endIndex": 26260,
      "length": 130,
      "embeddingIndex": 104
    },
    {
      "text": "eyboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26131,
      "endIndex": 26260,
      "length": 129,
      "embeddingIndex": 105
    },
    {
      "text": "yboardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26132,
      "endIndex": 26260,
      "length": 128,
      "embeddingIndex": 106
    },
    {
      "text": "boardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26133,
      "endIndex": 26260,
      "length": 127,
      "embeddingIndex": 107
    },
    {
      "text": "oardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26134,
      "endIndex": 26260,
      "length": 126,
      "embeddingIndex": 108
    },
    {
      "text": "ardInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26135,
      "endIndex": 26260,
      "length": 125,
      "embeddingIndex": 109
    },
    {
      "text": "rdInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26136,
      "endIndex": 26260,
      "length": 124,
      "embeddingIndex": 110
    },
    {
      "text": "dInterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26137,
      "endIndex": 26260,
      "length": 123,
      "embeddingIndex": 111
    },
    {
      "text": "Interrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26138,
      "endIndex": 26260,
      "length": 122,
      "embeddingIndex": 112
    },
    {
      "text": "nterrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26139,
      "endIndex": 26260,
      "length": 121,
      "embeddingIndex": 113
    },
    {
      "text": "terrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26140,
      "endIndex": 26260,
      "length": 120,
      "embeddingIndex": 114
    },
    {
      "text": "errupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26141,
      "endIndex": 26260,
      "length": 119,
      "embeddingIndex": 115
    },
    {
      "text": "rrupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26142,
      "endIndex": 26260,
      "length": 118,
      "embeddingIndex": 116
    },
    {
      "text": "rupt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26143,
      "endIndex": 26260,
      "length": 117,
      "embeddingIndex": 117
    },
    {
      "text": "upt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26144,
      "endIndex": 26260,
      "length": 116,
      "embeddingIndex": 118
    },
    {
      "text": "pt:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26145,
      "endIndex": 26260,
      "length": 115,
      "embeddingIndex": 119
    },
    {
      "text": "t:\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26146,
      "endIndex": 26260,
      "length": 114,
      "embeddingIndex": 120
    },
    {
      "text": ":\nprint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26147,
      "endIndex": 26260,
      "length": 113,
      "embeddingIndex": 121
    },
    {
      "text": "print(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26148,
      "endIndex": 26260,
      "length": 111,
      "embeddingIndex": 122
    },
    {
      "text": "print(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26149,
      "endIndex": 26260,
      "length": 111,
      "embeddingIndex": 123
    },
    {
      "text": "rint(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26150,
      "endIndex": 26260,
      "length": 110,
      "embeddingIndex": 124
    },
    {
      "text": "int(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26151,
      "endIndex": 26260,
      "length": 109,
      "embeddingIndex": 125
    },
    {
      "text": "nt(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26152,
      "endIndex": 26260,
      "length": 108,
      "embeddingIndex": 126
    },
    {
      "text": "t(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26153,
      "endIndex": 26260,
      "length": 107,
      "embeddingIndex": 127
    },
    {
      "text": "(\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26154,
      "endIndex": 26260,
      "length": 106,
      "embeddingIndex": 128
    },
    {
      "text": "\"\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26155,
      "endIndex": 26260,
      "length": 105,
      "embeddingIndex": 129
    },
    {
      "text": "\\n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26156,
      "endIndex": 26260,
      "length": 104,
      "embeddingIndex": 130
    },
    {
      "text": "n\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26157,
      "endIndex": 26260,
      "length": 103,
      "embeddingIndex": 131
    },
    {
      "text": "\\n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26158,
      "endIndex": 26260,
      "length": 102,
      "embeddingIndex": 132
    },
    {
      "text": "n Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26159,
      "endIndex": 26260,
      "length": 101,
      "embeddingIndex": 133
    },
    {
      "text": "Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26160,
      "endIndex": 26260,
      "length": 99,
      "embeddingIndex": 134
    },
    {
      "text": "Oops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26161,
      "endIndex": 26260,
      "length": 99,
      "embeddingIndex": 135
    },
    {
      "text": "ops! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26162,
      "endIndex": 26260,
      "length": 98,
      "embeddingIndex": 136
    },
    {
      "text": "ps! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26163,
      "endIndex": 26260,
      "length": 97,
      "embeddingIndex": 137
    },
    {
      "text": "s! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26164,
      "endIndex": 26260,
      "length": 96,
      "embeddingIndex": 138
    },
    {
      "text": "! Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26165,
      "endIndex": 26260,
      "length": 95,
      "embeddingIndex": 139
    },
    {
      "text": "Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26166,
      "endIndex": 26260,
      "length": 93,
      "embeddingIndex": 140
    },
    {
      "text": "Seems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26167,
      "endIndex": 26260,
      "length": 93,
      "embeddingIndex": 141
    },
    {
      "text": "eems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26168,
      "endIndex": 26260,
      "length": 92,
      "embeddingIndex": 142
    },
    {
      "text": "ems like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26169,
      "endIndex": 26260,
      "length": 91,
      "embeddingIndex": 143
    },
    {
      "text": "ms like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26170,
      "endIndex": 26260,
      "length": 90,
      "embeddingIndex": 144
    },
    {
      "text": "s like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26171,
      "endIndex": 26260,
      "length": 89,
      "embeddingIndex": 145
    },
    {
      "text": "like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26172,
      "endIndex": 26260,
      "length": 87,
      "embeddingIndex": 146
    },
    {
      "text": "like you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26173,
      "endIndex": 26260,
      "length": 87,
      "embeddingIndex": 147
    },
    {
      "text": "ike you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26174,
      "endIndex": 26260,
      "length": 86,
      "embeddingIndex": 148
    },
    {
      "text": "ke you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26175,
      "endIndex": 26260,
      "length": 85,
      "embeddingIndex": 149
    },
    {
      "text": "e you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26176,
      "endIndex": 26260,
      "length": 84,
      "embeddingIndex": 150
    },
    {
      "text": "you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26177,
      "endIndex": 26260,
      "length": 82,
      "embeddingIndex": 151
    },
    {
      "text": "you're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26178,
      "endIndex": 26260,
      "length": 82,
      "embeddingIndex": 152
    },
    {
      "text": "ou're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26179,
      "endIndex": 26260,
      "length": 81,
      "embeddingIndex": 153
    },
    {
      "text": "u're in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26180,
      "endIndex": 26260,
      "length": 80,
      "embeddingIndex": 154
    },
    {
      "text": "'re in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26181,
      "endIndex": 26260,
      "length": 79,
      "embeddingIndex": 155
    },
    {
      "text": "re in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26182,
      "endIndex": 26260,
      "length": 78,
      "embeddingIndex": 156
    },
    {
      "text": "e in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26183,
      "endIndex": 26260,
      "length": 77,
      "embeddingIndex": 157
    },
    {
      "text": "in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26184,
      "endIndex": 26260,
      "length": 75,
      "embeddingIndex": 158
    },
    {
      "text": "in a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26185,
      "endIndex": 26260,
      "length": 75,
      "embeddingIndex": 159
    },
    {
      "text": "n a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26186,
      "endIndex": 26260,
      "length": 74,
      "embeddingIndex": 160
    },
    {
      "text": "a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26187,
      "endIndex": 26260,
      "length": 72,
      "embeddingIndex": 161
    },
    {
      "text": "a hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26188,
      "endIndex": 26260,
      "length": 72,
      "embeddingIndex": 162
    },
    {
      "text": "hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26189,
      "endIndex": 26260,
      "length": 70,
      "embeddingIndex": 163
    },
    {
      "text": "hurry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26190,
      "endIndex": 26260,
      "length": 70,
      "embeddingIndex": 164
    },
    {
      "text": "urry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26191,
      "endIndex": 26260,
      "length": 69,
      "embeddingIndex": 165
    },
    {
      "text": "rry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26192,
      "endIndex": 26260,
      "length": 68,
      "embeddingIndex": 166
    },
    {
      "text": "ry... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26193,
      "endIndex": 26260,
      "length": 67,
      "embeddingIndex": 167
    },
    {
      "text": "y... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26194,
      "endIndex": 26260,
      "length": 66,
      "embeddingIndex": 168
    },
    {
      "text": "... Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26195,
      "endIndex": 26260,
      "length": 65,
      "embeddingIndex": 169
    },
    {
      "text": ".. Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26196,
      "endIndex": 26260,
      "length": 64,
      "embeddingIndex": 170
    },
    {
      "text": ". Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26197,
      "endIndex": 26260,
      "length": 63,
      "embeddingIndex": 171
    },
    {
      "text": "Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26198,
      "endIndex": 26260,
      "length": 61,
      "embeddingIndex": 172
    },
    {
      "text": "Happy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26199,
      "endIndex": 26260,
      "length": 61,
      "embeddingIndex": 173
    },
    {
      "text": "appy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26200,
      "endIndex": 26260,
      "length": 60,
      "embeddingIndex": 174
    },
    {
      "text": "ppy Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26201,
      "endIndex": 26260,
      "length": 59,
      "embeddingIndex": 175
    },
    {
      "text": "py Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26202,
      "endIndex": 26260,
      "length": 58,
      "embeddingIndex": 176
    },
    {
      "text": "y Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26203,
      "endIndex": 26260,
      "length": 57,
      "embeddingIndex": 177
    },
    {
      "text": "Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26204,
      "endIndex": 26260,
      "length": 55,
      "embeddingIndex": 178
    },
    {
      "text": "Hacking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26205,
      "endIndex": 26260,
      "length": 55,
      "embeddingIndex": 179
    },
    {
      "text": "acking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26206,
      "endIndex": 26260,
      "length": 54,
      "embeddingIndex": 180
    },
    {
      "text": "cking,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26207,
      "endIndex": 26260,
      "length": 53,
      "embeddingIndex": 181
    },
    {
      "text": "king,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26208,
      "endIndex": 26260,
      "length": 52,
      "embeddingIndex": 182
    },
    {
      "text": "ing,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26209,
      "endIndex": 26260,
      "length": 51,
      "embeddingIndex": 183
    },
    {
      "text": "ng,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26210,
      "endIndex": 26260,
      "length": 50,
      "embeddingIndex": 184
    },
    {
      "text": "g,\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26211,
      "endIndex": 26260,
      "length": 49,
      "embeddingIndex": 185
    },
    {
      "text": ",\nGhost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26212,
      "endIndex": 26260,
      "length": 48,
      "embeddingIndex": 186
    },
    {
      "text": "Ghost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26213,
      "endIndex": 26260,
      "length": 46,
      "embeddingIndex": 187
    },
    {
      "text": "Ghost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26214,
      "endIndex": 26260,
      "length": 46,
      "embeddingIndex": 188
    },
    {
      "text": "host! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26215,
      "endIndex": 26260,
      "length": 45,
      "embeddingIndex": 189
    },
    {
      "text": "ost! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26216,
      "endIndex": 26260,
      "length": 44,
      "embeddingIndex": 190
    },
    {
      "text": "st! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26217,
      "endIndex": 26260,
      "length": 43,
      "embeddingIndex": 191
    },
    {
      "text": "t! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26218,
      "endIndex": 26260,
      "length": 42,
      "embeddingIndex": 192
    },
    {
      "text": "! \")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26219,
      "endIndex": 26260,
      "length": 41,
      "embeddingIndex": 193
    },
    {
      "text": "\")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26220,
      "endIndex": 26260,
      "length": 39,
      "embeddingIndex": 194
    },
    {
      "text": "\")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26221,
      "endIndex": 26260,
      "length": 39,
      "embeddingIndex": 195
    },
    {
      "text": ")  \n\nif __name__ == \"__main__\":\nmain()",
      "startIndex": 26222,
      "endIndex": 26260,
      "length": 38,
      "embeddingIndex": 196
    },
    {
      "text": "if __name__ == \"__main__\":\nmain()",
      "startIndex": 26223,
      "endIndex": 26260,
      "length": 33,
      "embeddingIndex": 197
    },
    {
      "text": "if __name__ == \"__main__\":\nmain()",
      "startIndex": 26224,
      "endIndex": 26260,
      "length": 33,
      "embeddingIndex": 198
    },
    {
      "text": "if __name__ == \"__main__\":\nmain()",
      "startIndex": 26225,
      "endIndex": 26260,
      "length": 33,
      "embeddingIndex": 199
    },
    {
      "text": "if __name__ == \"__main__\":\nmain()",
      "startIndex": 26226,
      "endIndex": 26260,
      "length": 33,
      "embeddingIndex": 200
    },
    {
      "text": "if __name__ == \"__main__\":\nmain()",
      "startIndex": 26227,
      "endIndex": 26260,
      "length": 33,
      "embeddingIndex": 201
    },
    {
      "text": "f __name__ == \"__main__\":\nmain()",
      "startIndex": 26228,
      "endIndex": 26260,
      "length": 32,
      "embeddingIndex": 202
    },
    {
      "text": "__name__ == \"__main__\":\nmain()",
      "startIndex": 26229,
      "endIndex": 26260,
      "length": 30,
      "embeddingIndex": 203
    },
    {
      "text": "__name__ == \"__main__\":\nmain()",
      "startIndex": 26230,
      "endIndex": 26260,
      "length": 30,
      "embeddingIndex": 204
    },
    {
      "text": "_name__ == \"__main__\":\nmain()",
      "startIndex": 26231,
      "endIndex": 26260,
      "length": 29,
      "embeddingIndex": 205
    },
    {
      "text": "name__ == \"__main__\":\nmain()",
      "startIndex": 26232,
      "endIndex": 26260,
      "length": 28,
      "embeddingIndex": 206
    },
    {
      "text": "ame__ == \"__main__\":\nmain()",
      "startIndex": 26233,
      "endIndex": 26260,
      "length": 27,
      "embeddingIndex": 207
    },
    {
      "text": "me__ == \"__main__\":\nmain()",
      "startIndex": 26234,
      "endIndex": 26260,
      "length": 26,
      "embeddingIndex": 208
    },
    {
      "text": "e__ == \"__main__\":\nmain()",
      "startIndex": 26235,
      "endIndex": 26260,
      "length": 25,
      "embeddingIndex": 209
    },
    {
      "text": "__ == \"__main__\":\nmain()",
      "startIndex": 26236,
      "endIndex": 26260,
      "length": 24,
      "embeddingIndex": 210
    },
    {
      "text": "_ == \"__main__\":\nmain()",
      "startIndex": 26237,
      "endIndex": 26260,
      "length": 23,
      "embeddingIndex": 211
    },
    {
      "text": "== \"__main__\":\nmain()",
      "startIndex": 26238,
      "endIndex": 26260,
      "length": 21,
      "embeddingIndex": 212
    },
    {
      "text": "== \"__main__\":\nmain()",
      "startIndex": 26239,
      "endIndex": 26260,
      "length": 21,
      "embeddingIndex": 213
    },
    {
      "text": "= \"__main__\":\nmain()",
      "startIndex": 26240,
      "endIndex": 26260,
      "length": 20,
      "embeddingIndex": 214
    },
    {
      "text": "\"__main__\":\nmain()",
      "startIndex": 26241,
      "endIndex": 26260,
      "length": 18,
      "embeddingIndex": 215
    },
    {
      "text": "\"__main__\":\nmain()",
      "startIndex": 26242,
      "endIndex": 26260,
      "length": 18,
      "embeddingIndex": 216
    },
    {
      "text": "__main__\":\nmain()",
      "startIndex": 26243,
      "endIndex": 26260,
      "length": 17,
      "embeddingIndex": 217
    },
    {
      "text": "_main__\":\nmain()",
      "startIndex": 26244,
      "endIndex": 26260,
      "length": 16,
      "embeddingIndex": 218
    },
    {
      "text": "main__\":\nmain()",
      "startIndex": 26245,
      "endIndex": 26260,
      "length": 15,
      "embeddingIndex": 219
    },
    {
      "text": "ain__\":\nmain()",
      "startIndex": 26246,
      "endIndex": 26260,
      "length": 14,
      "embeddingIndex": 220
    },
    {
      "text": "in__\":\nmain()",
      "startIndex": 26247,
      "endIndex": 26260,
      "length": 13,
      "embeddingIndex": 221
    },
    {
      "text": "n__\":\nmain()",
      "startIndex": 26248,
      "endIndex": 26260,
      "length": 12,
      "embeddingIndex": 222
    },
    {
      "text": "__\":\nmain()",
      "startIndex": 26249,
      "endIndex": 26260,
      "length": 11,
      "embeddingIndex": 223
    },
    {
      "text": "_\":\nmain()",
      "startIndex": 26250,
      "endIndex": 26260,
      "length": 10,
      "embeddingIndex": 224
    },
    {
      "text": "\":\nmain()",
      "startIndex": 26251,
      "endIndex": 26260,
      "length": 9,
      "embeddingIndex": 225
    },
    {
      "text": ":\nmain()",
      "startIndex": 26252,
      "endIndex": 26260,
      "length": 8,
      "embeddingIndex": 226
    },
    {
      "text": "main()",
      "startIndex": 26253,
      "endIndex": 26260,
      "length": 6,
      "embeddingIndex": 227
    },
    {
      "text": "main()",
      "startIndex": 26254,
      "endIndex": 26260,
      "length": 6,
      "embeddingIndex": 228
    },
    {
      "text": "ain()",
      "startIndex": 26255,
      "endIndex": 26260,
      "length": 5,
      "embeddingIndex": 229
    },
    {
      "text": "in()",
      "startIndex": 26256,
      "endIndex": 26260,
      "length": 4,
      "embeddingIndex": 230
    },
    {
      "text": "n()",
      "startIndex": 26257,
      "endIndex": 26260,
      "length": 3,
      "embeddingIndex": 231
    },
    {
      "text": "()",
      "startIndex": 26258,
      "endIndex": 26260,
      "length": 2,
      "embeddingIndex": 232
    },
    {
      "text": ")",
      "startIndex": 26259,
      "endIndex": 26260,
      "length": 1,
      "embeddingIndex": 233
    }
  ]
}