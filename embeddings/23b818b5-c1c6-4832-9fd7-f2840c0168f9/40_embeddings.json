{
  "documentId": 40,
  "model": "nomic-embed-text",
  "dimensions": 768,
  "count": 236,
  "timestamp": "2025-05-02T14:53:53.304Z",
  "chunks": [
    {
      "text": "RAGINTEGRATION.md2025-04-30\n1 / 20\nRetrieval-Augmented Generation (RAG) Integration\nOverview\nThis document outlines the strategy for implementing Retrieval-Augmented Generation (RAG) in the Platform\nDashboard. RAG enhances the AI chatbot capabilities by retrieving relevant information from a knowledge\nbase before generating responses, improving accuracy and relevance while reducing hallucinations.\nTable of Contents\n1. Introduction\n2. Architecture\n3. Database Schema Updates\n4. Implementation Steps\n5. Vector Database Integration\n6. Document Processing Pipeline\n7. Frontend Integration\n8. Backend Services\n9. API Endpoints\n10. Testing and Validation\n11. Future Enhancements\nIntroduction\nRetrieval-Augmented Generation (RAG) combines retrieval-based and generation-based approaches for AI\nresponses:\n1. Retrieval: When a user submits a query, the system retrieves relevant information from a knowledge\nbase\n2.",
      "startIndex": 0,
      "endIndex": 914,
      "length": 911,
      "embeddingIndex": 0
    },
    {
      "text": "neration (RAG) combines retrieval-based and generation-based approaches for AI\nresponses:\n1. Retrieval: When a user submits a query, the system retrieves relevant information from a knowledge\nbase\n2. Augmentation: This retrieved information is combined with the user's query\n3. Generation: The augmented context is sent to the LLM for response generation\nBenefits:\nEnhanced factual accuracy using up-to-date information\nReduced hallucinations by grounding responses in sourced content\nAbility to cite sources of information\nImproved handling of domain-specific queries\nArchitecture\nThe RAG implementation will be built on our existing Ollama integration, with the following components:\nPlatform Dashboard RAG Architecture \n├── Frontend Components \n│   ├── Document Management UI \n│   ├── Enhanced Chat Interface \n\nRAGINTEGRATION.md2025-04-30\n2 / 20\n│   └── Knowledge Base Explorer \n├── Backend Services \n│   ├── Document Processing Service \n│   ├── Vector Database Integration (ChromaDB) \n│   ├──",
      "startIndex": 714,
      "endIndex": 1711,
      "length": 996,
      "embeddingIndex": 1
    },
    {
      "text": "Chat Interface \n\nRAGINTEGRATION.md2025-04-30\n2 / 20\n│   └── Knowledge Base Explorer \n├── Backend Services \n│   ├── Document Processing Service \n│   ├── Vector Database Integration (ChromaDB) \n│   ├── Embedding Generation Service \n│   └── RAG Query Pipeline \n└── Data Storage \n    ├── Document Store (File System) \n    ├── Vector Database (ChromaDB) \n    ├── Document Metadata (PostgreSQL) \n    └── RAG Configuration Settings (PostgreSQL) \nDatabase Schema Updates\nNew Tables\n1. vector_stores\nTrack configured vector database instances\nCREATE TABLE public.vector_stores ( \n    id UUID DEFAULT gen_random_uuid() NOT NULL PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    store_type VARCHAR(50) NOT NULL, \n    connection_string TEXT, \n    is_active BOOLEAN DEFAULT TRUE, \n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    config JSONB \n); \n2. document_collections\nOrganize documents into collections (e.g., \"Technical Documentation\",",
      "startIndex": 1511,
      "endIndex": 2502,
      "length": 990,
      "embeddingIndex": 2
    },
    {
      "text": "MP DEFAULT CURRENT_TIMESTAMP, \n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    config JSONB \n); \n2. document_collections\nOrganize documents into collections (e.g., \"Technical Documentation\", \"Policies\")\nCREATE TABLE public.document_collections ( \n    id UUID DEFAULT gen_random_uuid() NOT NULL PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    description TEXT, \n    user_id UUID NOT NULL REFERENCES public.users(id) ON DELETE CASCADE, \n    vector_store_id UUID REFERENCES public.vector_stores(id) ON DELETE SET \nNULL, \n    embedding_model VARCHAR(255), \n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    is_active BOOLEAN DEFAULT TRUE, \n    metadata JSONB \n); \n\nRAGINTEGRATION.md2025-04-30\n3 / 20\n3. documents\nEnhanced version of existing pdfs table to support all document types\nCREATE TABLE public.documents ( \n    id UUID DEFAULT gen_random_uuid() NOT NULL PRIMARY KEY, \n    user_id UUID NOT NULL REFERENCES public.users(id)",
      "startIndex": 2302,
      "endIndex": 3301,
      "length": 998,
      "embeddingIndex": 3
    },
    {
      "text": "f existing pdfs table to support all document types\nCREATE TABLE public.documents ( \n    id UUID DEFAULT gen_random_uuid() NOT NULL PRIMARY KEY, \n    user_id UUID NOT NULL REFERENCES public.users(id) ON DELETE CASCADE, \n    collection_id UUID REFERENCES public.document_collections(id) ON DELETE \nSET NULL, \n    title VARCHAR(255) NOT NULL, \n    file_path TEXT NOT NULL, \n    file_name VARCHAR(255) NOT NULL, \n    file_type VARCHAR(50) NOT NULL, \n    content_text TEXT, \n    content_hash VARCHAR(64), \n    vector_id VARCHAR(255), \n    processing_status VARCHAR(20) DEFAULT 'pending' NOT NULL, -- 'pending', \n'processing', 'processed', 'failed' \n    is_indexed BOOLEAN DEFAULT FALSE, \n    chunk_count INTEGER DEFAULT 0, \n    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    processed_at TIMESTAMP, \n    indexed_at TIMESTAMP, \n    last_accessed_at TIMESTAMP, \n    metadata JSONB \n); \n4. document_chunks\nStore individual chunks of documents for fine-grained retrieval\nCREATE TABLE",
      "startIndex": 3101,
      "endIndex": 4084,
      "length": 982,
      "embeddingIndex": 4
    },
    {
      "text": "ssed_at TIMESTAMP, \n    indexed_at TIMESTAMP, \n    last_accessed_at TIMESTAMP, \n    metadata JSONB \n); \n4. document_chunks\nStore individual chunks of documents for fine-grained retrieval\nCREATE TABLE public.document_chunks ( \n    id UUID DEFAULT gen_random_uuid() NOT NULL PRIMARY KEY, \n    document_id UUID NOT NULL REFERENCES public.documents(id) ON DELETE \nCASCADE, \n    chunk_index INTEGER NOT NULL, \n    content TEXT NOT NULL, \n    vector_id VARCHAR(255), \n    embedding VECTOR(1536), \n    token_count INTEGER, \n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    metadata JSONB \n); \n5. rag_settings\nConfigure RAG behavior and parameters\n\nRAGINTEGRATION.md2025-04-30\n4 / 20\nCREATE TABLE public.rag_settings ( \n    id SERIAL PRIMARY KEY, \n    embedding_model VARCHAR(255) DEFAULT 'ollama/nomic-embed-text', \n    chunk_size INTEGER DEFAULT 1000, \n    chunk_overlap INTEGER DEFAULT 200, \n    similarity_top_k INTEGER DEFAULT 4, \n    search_type VARCHAR(20) DEFAULT 'similarity',",
      "startIndex": 3884,
      "endIndex": 4875,
      "length": 985,
      "embeddingIndex": 5
    },
    {
      "text": "llama/nomic-embed-text', \n    chunk_size INTEGER DEFAULT 1000, \n    chunk_overlap INTEGER DEFAULT 200, \n    similarity_top_k INTEGER DEFAULT 4, \n    search_type VARCHAR(20) DEFAULT 'similarity', \n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \n    config JSONB \n); \nUpdating Existing Tables\n1. messages - Add references to retrieved document chunks\nALTER TABLE public.messages ADD COLUMN retrieved_chunks JSONB; \n2. chat_sessions - Add option to enable/disable RAG for a session\nALTER TABLE public.chat_sessions ADD COLUMN use_rag BOOLEAN DEFAULT TRUE; \nALTER TABLE public.chat_sessions ADD COLUMN rag_collections JSONB; \nImplementation Steps\nPhase 1: Foundation (Weeks 1-2)\n1. Database Setup\nCreate new tables in PostgreSQL\nCreate migration scripts\nUpdate database documentation\n2. Vector Database Integration\nInstall ChromaDB locally or via Docker\nImplement connection service\nCreate CRUD operations for vectors\nImplement configuration management\n3.",
      "startIndex": 4675,
      "endIndex": 5685,
      "length": 1009,
      "embeddingIndex": 6
    },
    {
      "text": "date database documentation\n2. Vector Database Integration\nInstall ChromaDB locally or via Docker\nImplement connection service\nCreate CRUD operations for vectors\nImplement configuration management\n3. Document Processing Service\nCreate file upload and processing pipeline\nImplement text extraction from PDFs, DOCXs, etc.\nImplement text chunking strategies\nCreate embedding generation service using Ollama models\n\nRAGINTEGRATION.md2025-04-30\n5 / 20\nPhase 2: Core RAG Implementation (Weeks 3-4)\n1. Query Pipeline\nImplement query embedding generation\nDevelop vector search functionality\nCreate context assembly for LLM prompts\nImplement citation tracking\n2. Ollama Integration\nEnhance Ollama service to support RAG\nImplement prompt templates for RAG queries\nCreate specialized chat completion with context\n3. API Endpoints\nImplement document management endpoints\nCreate collection management endpoints\nDevelop RAG-enabled chat endpoints\nPhase 3: Frontend and User Experience (Weeks 5-6)\n1.",
      "startIndex": 5485,
      "endIndex": 6471,
      "length": 985,
      "embeddingIndex": 7
    },
    {
      "text": "on with context\n3. API Endpoints\nImplement document management endpoints\nCreate collection management endpoints\nDevelop RAG-enabled chat endpoints\nPhase 3: Frontend and User Experience (Weeks 5-6)\n1. Document Management UI\nCreate document upload interface\nImplement collection management\nDevelop processing status indicators\n2. Enhanced Chat Interface\nUpdate chat UI to show citations\nImplement RAG toggle option\nCreate source preview functionality\n3. Knowledge Base Explorer\nDevelop interface to browse uploaded documents\nCreate collection and document search\nImplement document preview\nVector Database Integration\nChromaDB will be used as the vector database for storing and retrieving document embeddings:\n1. Installation\nnpm install chromadb \n2. Configuration\n\nRAGINTEGRATION.md2025-04-30\n6 / 20\nLocal ChromaDB instance (development)\nPersistent store using PersistentClient\nCollection per document group\n3.",
      "startIndex": 6271,
      "endIndex": 7182,
      "length": 910,
      "embeddingIndex": 8
    },
    {
      "text": "Installation\nnpm install chromadb \n2. Configuration\n\nRAGINTEGRATION.md2025-04-30\n6 / 20\nLocal ChromaDB instance (development)\nPersistent store using PersistentClient\nCollection per document group\n3. Integration Points\nDocument upload pipeline (embedding generation)\nQuery processing (similarity search)\nCollection management (CRUD operations)\nCore Functionality\n// src/services/vectorStoreService.js\nconst { ChromaClient } = require('chromadb'); \n \nclass VectorStoreService { \n  constructor(config) { \n    this.client = new ChromaClient(config.host, config.port); \n    this.defaultEmbeddingFunction = \nthis.getEmbeddingFunction(config.embeddingModel); \n  } \n \n  async getCollection(name, embeddingFunction = this.defaultEmbeddingFunction) { \n    try { \n      return await this.client.getCollection(name, embeddingFunction); \n    } catch (error) { \n      return await this.client.createCollection(name, { embeddingFunction }); \n    } \n  } \n \n  getEmbeddingFunction(modelName) { \n    // Integration",
      "startIndex": 6982,
      "endIndex": 7980,
      "length": 996,
      "embeddingIndex": 9
    },
    {
      "text": "(name, embeddingFunction); \n    } catch (error) { \n      return await this.client.createCollection(name, { embeddingFunction }); \n    } \n  } \n \n  getEmbeddingFunction(modelName) { \n    // Integration with Ollama embedding models \n    return { \n      generate: async (texts) => { \n        // Call Ollama embedding endpoint \n        const embeddings = await ollamaService.generateEmbeddings(modelName, \ntexts); \n        return embeddings; \n      } \n    }; \n  } \n \n  // Other methods for CRUD operations, search, etc. \n} \nDocument Processing Pipeline\nThe document processing pipeline will handle various document types and prepare them for RAG:\nDirectory Structure\n\nRAGINTEGRATION.md2025-04-30\n7 / 20\nproductdemo/ \n├── Documents/           # Storage for uploaded document files \n│   ├── user_id_1/       # Organized by user ID \n│   │   ├── doc_id_1/    # Each document gets its own folder \n│   │   │   └── original.pdf \n│   │   └── doc_id_2/ \n│   │       └── original.docx \n│   └── user_id_2/ \n│       └── ...",
      "startIndex": 7780,
      "endIndex": 8787,
      "length": 1006,
      "embeddingIndex": 10
    },
    {
      "text": "nized by user ID \n│   │   ├── doc_id_1/    # Each document gets its own folder \n│   │   │   └── original.pdf \n│   │   └── doc_id_2/ \n│   │       └── original.docx \n│   └── user_id_2/ \n│       └── ... \n│ \n├── Embeddings/          # Storage for document embeddings \n    ├── user_id_1/       # Organized by user ID \n    │   ├── doc_id_1/    # Each document gets its own folder \n    │   │   ├── metadata.json    # Document metadata including hash \n    │   │   ├── chunks.json      # Text chunks \n    │   │   └── embeddings.bin   # Binary embedding vectors \n    │   └── doc_id_2/ \n    │       └── ... \n    └── user_id_2/ \n        └── ... \nProcessing Flow\n1. Upload Phase\nFile validation and sanitization\nDocument metadata extraction\nStorage in file system (Documents/user_id/doc_id/original.[ext])\nEntry created in database with status \"pending\"\n2. Processing Phase\nText extraction based on document type\nContent chunking with configurable overlap\nEmbedding generation using Ollama models\nVector storage",
      "startIndex": 8587,
      "endIndex": 9586,
      "length": 998,
      "embeddingIndex": 11
    },
    {
      "text": "created in database with status \"pending\"\n2. Processing Phase\nText extraction based on document type\nContent chunking with configurable overlap\nEmbedding generation using Ollama models\nVector storage in ChromaDB\nStatus updates in database\nStorage of embeddings in Embeddings/user_id/doc_id/ directory\n3. Indexing Phase\nMetadata indexing\nVector indexing optimization\nRelationship mapping for collections\nDeduplication Strategy\nTo avoid reprocessing identical documents:\n1. Hash Verification\n\nRAGINTEGRATION.md2025-04-30\n8 / 20\nWhen a document is uploaded, calculate its content hash\nCheck if a document with the same hash exists in the user's collection\nIf match found, verify metadata similarity (optional)\n2. Reuse Existing Embeddings\nIf duplicate detected, link to existing embeddings in database\nUpdate document record with reference to existing vector IDs\nSkip processing pipeline, mark as \"processed\" immediately\n3.",
      "startIndex": 9386,
      "endIndex": 10307,
      "length": 920,
      "embeddingIndex": 12
    },
    {
      "text": "ing Embeddings\nIf duplicate detected, link to existing embeddings in database\nUpdate document record with reference to existing vector IDs\nSkip processing pipeline, mark as \"processed\" immediately\n3. Partial Updates\nFor similar but not identical documents, consider partial updates\nOnly process and embed changed sections (future enhancement)\nText Extraction and Chunking\n// src/services/documentProcessingService.js\nconst fs = require('fs'); \nconst path = require('path'); \nconst pdf = require('pdf-parse'); \nconst mammoth = require('mammoth'); \n \nclass DocumentProcessingService { \n  constructor(config, vectorStoreService) { \n    this.config = config; \n    this.vectorStoreService = vectorStoreService; \n    this.chunkSize = config.chunkSize || 1000; \n    this.chunkOverlap = config.chunkOverlap || 200; \n  } \n \n  async processDocument(document) { \n    // Extract text based on document type \n    const text = await this.extractText(document); \n \n    // Chunk text into segments \n    const chunks",
      "startIndex": 10107,
      "endIndex": 11107,
      "length": 999,
      "embeddingIndex": 13
    },
    {
      "text": "| 200; \n  } \n \n  async processDocument(document) { \n    // Extract text based on document type \n    const text = await this.extractText(document); \n \n    // Chunk text into segments \n    const chunks = this.chunkText(text); \n \n    // Generate embeddings and store in vector db \n    await this.vectorizeChunks(document.id, chunks, document.collection_id); \n \n    return { \n      documentId: document.id, \n      chunkCount: chunks.length, \n      status: 'processed' \n    }; \n  } \n \n  async extractText(document) { \n    const filePath = document.file_path; \n    const fileType = document.file_type.toLowerCase(); \n \n\nRAGINTEGRATION.md2025-04-30\n9 / 20\n    switch (fileType) { \n      case 'pdf': \n        return await this.extractFromPDF(filePath); \n      case 'docx': \n        return await this.extractFromDOCX(filePath); \n      case 'txt': \n        return await this.extractFromTXT(filePath); \n      // Add other document types as needed \n      default: \n        throw new Error(`Unsupported file type:",
      "startIndex": 10907,
      "endIndex": 11908,
      "length": 1000,
      "embeddingIndex": 14
    },
    {
      "text": "omDOCX(filePath); \n      case 'txt': \n        return await this.extractFromTXT(filePath); \n      // Add other document types as needed \n      default: \n        throw new Error(`Unsupported file type: ${fileType}`); \n    } \n  } \n \n  // Methods for specific file type extraction \n  async extractFromPDF(filePath) { \n    const dataBuffer = fs.readFileSync(filePath); \n    const data = await pdf(dataBuffer); \n    return data.text; \n  } \n \n  async extractFromDOCX(filePath) { \n    const result = await mammoth.extractRawText({ path: filePath }); \n    return result.value; \n  } \n \n  async extractFromTXT(filePath) { \n    return fs.readFileSync(filePath, 'utf8'); \n  } \n \n  // Methods for chunking \n  chunkText(text) { \n    const chunks = []; \n    let startIndex = 0; \n \n    while (startIndex < text.length) { \n      // Calculate end index with consideration for overlap \n      const endIndex = Math.min(startIndex + this.chunkSize, text.length); \n      chunks.push(text.slice(startIndex, endIndex));",
      "startIndex": 11708,
      "endIndex": 12709,
      "length": 994,
      "embeddingIndex": 15
    },
    {
      "text": "{ \n      // Calculate end index with consideration for overlap \n      const endIndex = Math.min(startIndex + this.chunkSize, text.length); \n      chunks.push(text.slice(startIndex, endIndex)); \n \n      // Move start index forward, accounting for overlap \n      startIndex += this.chunkSize - this.chunkOverlap; \n \n      // Ensure we make progress even with large overlap \n      if (startIndex <= (endIndex - this.chunkSize/2)) { \n        startIndex = endIndex - this.chunkOverlap; \n      } \n    } \n \n    return chunks; \n  } \n \n  // Methods for vectorization and deduplication \n  async vectorizeChunks(documentId, chunks, collectionId) { \n    // Generate embeddings for each chunk \n\nRAGINTEGRATION.md2025-04-30\n10 / 20\n    const embeddings = await this.generateEmbeddings(chunks); \n \n    // Store chunks and embeddings \n    await this.storeChunksAndEmbeddings(documentId, chunks, embeddings); \n \n    // Update document status \n    await this.updateDocumentStatus(documentId, chunks.length);",
      "startIndex": 12509,
      "endIndex": 13507,
      "length": 989,
      "embeddingIndex": 16
    },
    {
      "text": "hunks and embeddings \n    await this.storeChunksAndEmbeddings(documentId, chunks, embeddings); \n \n    // Update document status \n    await this.updateDocumentStatus(documentId, chunks.length); \n \n    return chunks.length; \n  } \n \n  async checkForDuplicates(document) { \n    // Calculate content hash if not already done \n    if (!document.content_hash) { \n      const text = await this.extractText(document); \n      document.content_hash = this.calculateContentHash(text); \n      await this.updateDocumentHash(document.id, document.content_hash); \n    } \n \n    // Check for existing document with same hash \n    const existingDoc = await this.findDocumentByHash( \n      document.content_hash, \n      document.user_id \n    ); \n \n    if (existingDoc) { \n      console.log(`Duplicate document detected: ${document.id} matches \n${existingDoc.id}`); \n \n      // Link to existing embeddings \n      await this.linkToExistingEmbeddings(document.id, existingDoc.id); \n \n      // Mark as processed without",
      "startIndex": 13307,
      "endIndex": 14303,
      "length": 995,
      "embeddingIndex": 17
    },
    {
      "text": "ed: ${document.id} matches \n${existingDoc.id}`); \n \n      // Link to existing embeddings \n      await this.linkToExistingEmbeddings(document.id, existingDoc.id); \n \n      // Mark as processed without running the pipeline \n      await this.updateDocumentStatus( \n        document.id, \n        existingDoc.chunk_count, \n        'processed', \n        'Used existing embeddings from duplicate document' \n      ); \n \n      return true; // Duplicate found \n    } \n \n    return false; // No duplicate found \n  } \n \n  calculateContentHash(text) { \n    const crypto = require('crypto'); \n    return crypto.createHash('sha256').update(text).digest('hex'); \n  } \n} \n\nRAGINTEGRATION.md2025-04-30\n11 / 20\nFrontend Integration\nThe frontend will be updated to support RAG features:\n1. Document Management Page\nUpload interface with drag-and-drop\nCollection management\nProcessing status and statistics\n2. Chat Enhancements\nToggle for RAG mode\nCollection selector for context scope\nCitation display in messages\nSource preview on citation click\n3.",
      "startIndex": 14103,
      "endIndex": 15133,
      "length": 1029,
      "embeddingIndex": 18
    },
    {
      "text": "Collection management\nProcessing status and statistics\n2. Chat Enhancements\nToggle for RAG mode\nCollection selector for context scope\nCitation display in messages\nSource preview on citation click\n3. Knowledge Base Explorer\nDocument browser with search and filters\nCollection management interface\nDocument preview and metadata display\nComponent Updates\n// client/src/components/chat/ChatInput.tsx\n// Add RAG options to ChatInput component \n \nconst ChatInput: React.FC<ChatInputProps> = ({ \n  onSendMessage, \n  isLoading, \n  useRAG, \n  onToggleRAG, \n  selectedCollections, \n  onSelectCollections \n}) => { \n  // Existing code... \n \n  return ( \n    <div className=\"chat-input-container\"> \n      {/* Existing input elements */} \n \n      <div className=\"rag-controls\"> \n        <Switch \n          isChecked={useRAG} \n          onChange={onToggleRAG} \n          label=\"Use Knowledge Base\" \n        /> \n \n        {useRAG && ( \n          <CollectionSelector",
      "startIndex": 14933,
      "endIndex": 15896,
      "length": 948,
      "embeddingIndex": 19
    },
    {
      "text": "<Switch \n          isChecked={useRAG} \n          onChange={onToggleRAG} \n          label=\"Use Knowledge Base\" \n        /> \n \n        {useRAG && ( \n          <CollectionSelector \n            selectedCollections={selectedCollections} \n\nRAGINTEGRATION.md2025-04-30\n12 / 20\n            onChange={onSelectCollections} \n          /> \n        )} \n      </div> \n    </div> \n  ); \n}; \nBackend Services\nThe backend will require several new services:\n1. ragService.js: Orchestrates the RAG process\n2. vectorStoreService.js: Manages vector database operations\n3. documentProcessingService.js: Handles document processing\n4. embeddingService.js: Generates embeddings using Ollama\nRAG Service\n// src/services/ragService.js\nclass RAGService { \n  constructor( \n    vectorStoreService, \n    documentService, \n    ollamaService, \n    config \n  ) { \n    this.vectorStoreService = vectorStoreService; \n    this.documentService = documentService; \n    this.ollamaService = ollamaService; \n    this.config =",
      "startIndex": 15696,
      "endIndex": 16692,
      "length": 985,
      "embeddingIndex": 20
    },
    {
      "text": "ice, \n    ollamaService, \n    config \n  ) { \n    this.vectorStoreService = vectorStoreService; \n    this.documentService = documentService; \n    this.ollamaService = ollamaService; \n    this.config = config; \n  } \n \n  async queryWithRAG(query, model, collectionIds, options = {}) { \n    // Generate embedding for the query \n    const queryEmbedding = await this.getQueryEmbedding(query); \n \n    // Retrieve relevant chunks from vector store \n    const relevantChunks = await this.retrieveRelevantChunks( \n      queryEmbedding, \n      collectionIds, \n      options.topK || 4 \n    ); \n \n    // Format context from retrieved chunks \n    const formattedContext = this.formatContext(relevantChunks); \n \n    // Generate augmented response using Ollama \n    const response = await this.ollamaService.chatWithContext( \n      model, \n      query, \n\nRAGINTEGRATION.md2025-04-30\n13 / 20\n      formattedContext, \n      options.systemPrompt \n    ); \n \n    // Add citation metadata to response \n    return",
      "startIndex": 16492,
      "endIndex": 17484,
      "length": 991,
      "embeddingIndex": 21
    },
    {
      "text": ".chatWithContext( \n      model, \n      query, \n\nRAGINTEGRATION.md2025-04-30\n13 / 20\n      formattedContext, \n      options.systemPrompt \n    ); \n \n    // Add citation metadata to response \n    return this.addCitations(response, relevantChunks); \n  } \n \n  // Helper methods for embedding, retrieval, formatting, etc. \n} \nAPI Endpoints\nNew API endpoints will be added to support RAG functionality:\nDocument Management\n// src/routes/documents.js\nconst express = require('express'); \nconst router = express.Router(); \nconst multer = require('multer'); \nconst { isAuthenticated } = require('../middleware/auth'); \n \nmodule.exports = function(documentService, ragService) { \n  // Configure multer for file uploads \n  const upload = multer({ \n    dest: 'uploads/', \n    limits: { fileSize: 50 * 1024 * 1024 } // 50MB limit \n  }); \n \n  // Upload document \n  router.post('/upload', isAuthenticated, upload.single('document'), async (req, \nres) => { \n    try { \n      // Create document record \n      const",
      "startIndex": 17284,
      "endIndex": 18281,
      "length": 996,
      "embeddingIndex": 22
    },
    {
      "text": "24 } // 50MB limit \n  }); \n \n  // Upload document \n  router.post('/upload', isAuthenticated, upload.single('document'), async (req, \nres) => { \n    try { \n      // Create document record \n      const document = await documentService.createDocument({ \n        file: req.file, \n        userId: req.user.id, \n        collectionId: req.body.collectionId, \n        title: req.body.title || req.file.originalname, \n        metadata: req.body.metadata ? JSON.parse(req.body.metadata) : {} \n      }); \n \n      // Save file to Documents directory \n      const userDir = path.join('Documents', document.user_id); \n      const docDir = path.join(userDir, document.id); \n \n      // Create directories if they don't exist \n      if (!fs.existsSync(userDir)) fs.mkdirSync(userDir, { recursive: true }); \n      if (!fs.existsSync(docDir)) fs.mkdirSync(docDir, { recursive: true }); \n \n\nRAGINTEGRATION.md2025-04-30\n14 / 20\n      // Move uploaded file to final destination \n      const originalExt =",
      "startIndex": 18081,
      "endIndex": 19064,
      "length": 982,
      "embeddingIndex": 23
    },
    {
      "text": "e }); \n      if (!fs.existsSync(docDir)) fs.mkdirSync(docDir, { recursive: true }); \n \n\nRAGINTEGRATION.md2025-04-30\n14 / 20\n      // Move uploaded file to final destination \n      const originalExt = path.extname(document.file_name); \n      const finalPath = path.join(docDir, `original${originalExt}`); \n      fs.renameSync(req.file.path, finalPath); \n \n      // Update document with final path \n      await documentService.updateDocumentPath(document.id, finalPath); \n \n      // Check for duplicates before processing \n      const isDuplicate = await documentService.checkForDuplicates(document.id); \n \n      if (!isDuplicate) { \n        // Start processing in background if not a duplicate \n        documentService.processDocumentAsync(document.id); \n      } \n \n      res.status(201).json({ \n        ...document, \n        isDuplicate \n      }); \n    } catch (error) { \n      res.status(500).json({ error: error.message }); \n    } \n  }); \n \n  // Other document management endpoints \n  // GET /documents \n  // GET /documents/:id \n  // DELETE /documents/:id \n  // etc.",
      "startIndex": 18864,
      "endIndex": 19933,
      "length": 1068,
      "embeddingIndex": 24
    },
    {
      "text": "{ \n      res.status(500).json({ error: error.message }); \n    } \n  }); \n \n  // Other document management endpoints \n  // GET /documents \n  // GET /documents/:id \n  // DELETE /documents/:id \n  // etc. \n \n  return router; \n}; \nRAG-Enabled Chat\n// src/routes/chatbot.js (updated) \nrouter.post('/chat-rag', isAuthenticated, async (req, res) => { \n  try { \n    const { message, sessionId, modelId, useRAG, collectionIds } = req.body; \n \n    // Create chat session if needed \n    let session; \n    if (sessionId) { \n      session = await getSessionById(sessionId, req.user.id); \n      if (!session) { \n        return res.status(404).json({ error: 'Session not found' }); \n      } \n    } else { \n      session = await createNewSession(req.user.id, message.substring(0, 50)); \n    } \n\nRAGINTEGRATION.md2025-04-30\n15 / 20\n \n    // Save user message \n    const messageRecord = await saveMessage(req.user.id, message, null, \nsession.id); \n \n    // If RAG is enabled, use RAG service for response \n    let",
      "startIndex": 19733,
      "endIndex": 20727,
      "length": 993,
      "embeddingIndex": 25
    },
    {
      "text": "2025-04-30\n15 / 20\n \n    // Save user message \n    const messageRecord = await saveMessage(req.user.id, message, null, \nsession.id); \n \n    // If RAG is enabled, use RAG service for response \n    let response; \n    if (useRAG && collectionIds && collectionIds.length > 0) { \n      response = await ragService.queryWithRAG( \n        message, \n        modelId, \n        collectionIds, \n        { includeCitations: true } \n      ); \n \n      // Update message with retrieved chunks \n      await updateMessageWithChunks(messageRecord.id, response.citations); \n    } else { \n      // Regular Ollama chat without RAG \n      response = await ollamaService.chat(modelId, [{ \n        role: 'user', \n        content: message \n      }]); \n    } \n \n    // Update message with AI response \n    await updateMessageResponse(messageRecord.id, response.text); \n \n    res.json({ \n      sessionId: session.id, \n      messageId: messageRecord.id, \n      response: response.text, \n      citations: response.citations ||",
      "startIndex": 20527,
      "endIndex": 21525,
      "length": 997,
      "embeddingIndex": 26
    },
    {
      "text": "eResponse(messageRecord.id, response.text); \n \n    res.json({ \n      sessionId: session.id, \n      messageId: messageRecord.id, \n      response: response.text, \n      citations: response.citations || [], \n      model: modelId \n    }); \n  } catch (error) { \n    console.error('Error in chat-rag endpoint:', error); \n    res.status(500).json({ error: error.message }); \n  } \n}); \nTesting and Validation\nThe RAG implementation will be tested using:\n1. Unit Tests\nTest document processing pipeline\nTest vector store operations\nTest chunking and embedding generation\n2. Integration Tests\n\nRAGINTEGRATION.md2025-04-30\n16 / 20\nTest end-to-end document upload to RAG query\nTest various document types and sizes\nTest vector database connection reliability\n3. Performance Testing\nMeasure retrieval latency for various collection sizes\nTest embedding generation performance\nEvaluate response quality compared to non-RAG responses\n4.",
      "startIndex": 21325,
      "endIndex": 22247,
      "length": 921,
      "embeddingIndex": 27
    },
    {
      "text": "e connection reliability\n3. Performance Testing\nMeasure retrieval latency for various collection sizes\nTest embedding generation performance\nEvaluate response quality compared to non-RAG responses\n4. User Testing\nValidate relevance of retrieved information\nTest usability of document management interface\nGather feedback on citation presentation\nEmbedding Storage and Retrieval\nStorage Format\nThe embeddings will be stored in both the filesystem and ChromaDB:\n1. Filesystem Storage\nLocation: Embeddings/user_id/doc_id/\nFiles:\nmetadata.json: Document metadata including hash, title, etc.\nchunks.json: Array of text chunks with positions and metadata\nembeddings.bin: Binary file containing embedding vectors\n2. ChromaDB Storage\nCollection per user or document group\nEach document chunk stored with:\nID: doc_id:chunk_index\nEmbedding: Vector representation\nMetadata: Document info, chunk position, etc.\nEmbedding Generation\n// src/services/embeddingService.js\nclass EmbeddingService {",
      "startIndex": 22047,
      "endIndex": 23031,
      "length": 980,
      "embeddingIndex": 28
    },
    {
      "text": "stored with:\nID: doc_id:chunk_index\nEmbedding: Vector representation\nMetadata: Document info, chunk position, etc.\nEmbedding Generation\n// src/services/embeddingService.js\nclass EmbeddingService { \n  constructor(ollamaService, config) { \n    this.ollamaService = ollamaService; \n    this.embeddingModel = config.embeddingModel || 'nomic-embed-text'; \n  } \n \n  async generateEmbeddings(texts) { \n    if (!Array.isArray(texts)) { \n      texts = [texts]; \n    } \n\nRAGINTEGRATION.md2025-04-30\n17 / 20\n \n    const embeddings = []; \n \n    // Process in batches to avoid overwhelming the Ollama server \n    const batchSize = 10; \n    for (let i = 0; i < texts.length; i += batchSize) { \n      const batch = texts.slice(i, i + batchSize); \n      const batchEmbeddings = await Promise.all( \n        batch.map(text => \nthis.ollamaService.generateEmbedding(this.embeddingModel, text)) \n      ); \n      embeddings.push(...batchEmbeddings); \n    } \n \n    return embeddings; \n  } \n \n  async",
      "startIndex": 22831,
      "endIndex": 23808,
      "length": 976,
      "embeddingIndex": 29
    },
    {
      "text": "ll( \n        batch.map(text => \nthis.ollamaService.generateEmbedding(this.embeddingModel, text)) \n      ); \n      embeddings.push(...batchEmbeddings); \n    } \n \n    return embeddings; \n  } \n \n  async storeEmbeddings(documentId, userId, chunks, embeddings) { \n    // Create directory structure \n    const userDir = path.join('Embeddings', userId); \n    const docDir = path.join(userDir, documentId); \n \n    if (!fs.existsSync(userDir)) fs.mkdirSync(userDir, { recursive: true }); \n    if (!fs.existsSync(docDir)) fs.mkdirSync(docDir, { recursive: true }); \n \n    // Store chunks \n    const chunksWithMetadata = chunks.map((chunk, index) => ({ \n      index, \n      content: chunk, \n      token_count: this.estimateTokenCount(chunk) \n    })); \n \n    fs.writeFileSync( \n      path.join(docDir, 'chunks.json'), \n      JSON.stringify(chunksWithMetadata, null, 2) \n    ); \n \n    // Store embeddings in binary format \n    const embeddingBuffer = this.convertEmbeddingsToBuffer(embeddings);",
      "startIndex": 23608,
      "endIndex": 24595,
      "length": 981,
      "embeddingIndex": 30
    },
    {
      "text": "r, 'chunks.json'), \n      JSON.stringify(chunksWithMetadata, null, 2) \n    ); \n \n    // Store embeddings in binary format \n    const embeddingBuffer = this.convertEmbeddingsToBuffer(embeddings); \n    fs.writeFileSync(path.join(docDir, 'embeddings.bin'), embeddingBuffer); \n \n    // Store metadata \n    const metadata = { \n      document_id: documentId, \n      user_id: userId, \n      chunk_count: chunks.length, \n      embedding_model: this.embeddingModel, \n      created_at: new Date().toISOString(), \n      dimensions: embeddings[0].length \n    }; \n \n    fs.writeFileSync( \n      path.join(docDir, 'metadata.json'), \n      JSON.stringify(metadata, null, 2) \n\nRAGINTEGRATION.md2025-04-30\n18 / 20\n    ); \n \n    return { \n      path: docDir, \n      metadata \n    }; \n  } \n \n  // Helper methods \n  convertEmbeddingsToBuffer(embeddings) { \n    // Convert array of embedding vectors to binary buffer \n    const dimensions = embeddings[0].length; \n    const buffer = Buffer.alloc(embeddings.length *",
      "startIndex": 24395,
      "endIndex": 25390,
      "length": 994,
      "embeddingIndex": 31
    },
    {
      "text": "convertEmbeddingsToBuffer(embeddings) { \n    // Convert array of embedding vectors to binary buffer \n    const dimensions = embeddings[0].length; \n    const buffer = Buffer.alloc(embeddings.length * dimensions * 4); // 4 bytes \nper float32 \n \n    embeddings.forEach((embedding, embIndex) => { \n      embedding.forEach((value, valueIndex) => { \n        buffer.writeFloatLE(value, (embIndex * dimensions + valueIndex) * 4); \n      }); \n    }); \n \n    return buffer; \n  } \n \n  loadEmbeddingsFromBuffer(buffer, count, dimensions) { \n    // Load embeddings from binary buffer \n    const embeddings = []; \n \n    for (let i = 0; i < count; i++) { \n      const embedding = []; \n      for (let j = 0; j < dimensions; j++) { \n        embedding.push(buffer.readFloatLE((i * dimensions + j) * 4)); \n      } \n      embeddings.push(embedding); \n    } \n \n    return embeddings; \n  } \n \n  estimateTokenCount(text) { \n    // Simple estimation: ~4 characters per token \n    return Math.ceil(text.length / 4); \n  } \n} \nRetrieval Process\nWhen a user query is processed:\n1.",
      "startIndex": 25190,
      "endIndex": 26244,
      "length": 1052,
      "embeddingIndex": 32
    },
    {
      "text": "beddings; \n  } \n \n  estimateTokenCount(text) { \n    // Simple estimation: ~4 characters per token \n    return Math.ceil(text.length / 4); \n  } \n} \nRetrieval Process\nWhen a user query is processed:\n1. Query Embedding\n\nRAGINTEGRATION.md2025-04-30\n19 / 20\n// Generate embedding for user query\nconst queryEmbedding = await embeddingService.generateEmbeddings(query); \n2. Vector Search\n// Search ChromaDB for similar chunks\nconst results = await vectorStoreService.search( \n  collectionId, \n  queryEmbedding, \n  { \n    limit: topK, \n    includeMetadata: true, \n    includeEmbeddings: false \n  } \n); \n3. Context Assembly\n// Format retrieved chunks for LLM context\nconst context = results.map(result => { \n  return { \n    content: result.metadata.content, \n    source: result.metadata.source, \n    document_title: result.metadata.document_title, \n    document_id: result.metadata.document_id, \n    similarity: result.similarity \n  }; \n}); \n \n// Format context for LLM prompt\nconst formattedContext = formatContextForLLM(context); \nFuture Enhancements\n1.",
      "startIndex": 26044,
      "endIndex": 27091,
      "length": 1046,
      "embeddingIndex": 33
    },
    {
      "text": "ument_id: result.metadata.document_id, \n    similarity: result.similarity \n  }; \n}); \n \n// Format context for LLM prompt\nconst formattedContext = formatContextForLLM(context); \nFuture Enhancements\n1. Advanced Retrieval Methods\nHybrid search (keyword + vector)\nRe-ranking of retrieved chunks\nMulti-query retrieval strategies\n2. Document Processing Enhancements\nOCR for scanned documents and images\nTable extraction and structured data handling\nAutomatic metadata extraction\n3. Agent Integration\n\nRAGINTEGRATION.md2025-04-30\n20 / 20\nCombine RAG with Ollama's function calling\nCreate specialized agents with domain knowledge\nImplement autonomous research workflows\n4. Multi-Model Support\nUse different models for embedding vs. generation\nSupport multiple embedding spaces\nModel-specific prompt templates\n5. Expanded Knowledge Sources\nWeb crawling and automatic updates\nAPI integrations for external knowledge bases\nDatabase querying capabilities\n6.",
      "startIndex": 26891,
      "endIndex": 27837,
      "length": 945,
      "embeddingIndex": 34
    },
    {
      "text": "tiple embedding spaces\nModel-specific prompt templates\n5. Expanded Knowledge Sources\nWeb crawling and automatic updates\nAPI integrations for external knowledge bases\nDatabase querying capabilities\n6. Embedding Optimization\nCompression techniques for embeddings\nQuantization to reduce storage requirements\nIncremental updates for large documents\nImplementation Timeline\nPhaseTimeframeKey Deliverables\n1: FoundationWeeks 1-2Database schema, Vector DB integration, Document processing\n2: Core RAGWeeks 3-4Query pipeline, Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 27637,
      "endIndex": 28347,
      "length": 710,
      "embeddingIndex": 35
    },
    {
      "text": "peline, Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28147,
      "endIndex": 28347,
      "length": 200,
      "embeddingIndex": 36
    },
    {
      "text": "eline, Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28148,
      "endIndex": 28347,
      "length": 199,
      "embeddingIndex": 37
    },
    {
      "text": "line, Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28149,
      "endIndex": 28347,
      "length": 198,
      "embeddingIndex": 38
    },
    {
      "text": "ine, Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28150,
      "endIndex": 28347,
      "length": 197,
      "embeddingIndex": 39
    },
    {
      "text": "ne, Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28151,
      "endIndex": 28347,
      "length": 196,
      "embeddingIndex": 40
    },
    {
      "text": "e, Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28152,
      "endIndex": 28347,
      "length": 195,
      "embeddingIndex": 41
    },
    {
      "text": ", Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28153,
      "endIndex": 28347,
      "length": 194,
      "embeddingIndex": 42
    },
    {
      "text": "Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28154,
      "endIndex": 28347,
      "length": 192,
      "embeddingIndex": 43
    },
    {
      "text": "Ollama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28155,
      "endIndex": 28347,
      "length": 192,
      "embeddingIndex": 44
    },
    {
      "text": "llama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28156,
      "endIndex": 28347,
      "length": 191,
      "embeddingIndex": 45
    },
    {
      "text": "lama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28157,
      "endIndex": 28347,
      "length": 190,
      "embeddingIndex": 46
    },
    {
      "text": "ama integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28158,
      "endIndex": 28347,
      "length": 189,
      "embeddingIndex": 47
    },
    {
      "text": "ma integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28159,
      "endIndex": 28347,
      "length": 188,
      "embeddingIndex": 48
    },
    {
      "text": "a integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28160,
      "endIndex": 28347,
      "length": 187,
      "embeddingIndex": 49
    },
    {
      "text": "integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28161,
      "endIndex": 28347,
      "length": 185,
      "embeddingIndex": 50
    },
    {
      "text": "integration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28162,
      "endIndex": 28347,
      "length": 185,
      "embeddingIndex": 51
    },
    {
      "text": "ntegration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28163,
      "endIndex": 28347,
      "length": 184,
      "embeddingIndex": 52
    },
    {
      "text": "tegration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28164,
      "endIndex": 28347,
      "length": 183,
      "embeddingIndex": 53
    },
    {
      "text": "egration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28165,
      "endIndex": 28347,
      "length": 182,
      "embeddingIndex": 54
    },
    {
      "text": "gration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28166,
      "endIndex": 28347,
      "length": 181,
      "embeddingIndex": 55
    },
    {
      "text": "ration, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28167,
      "endIndex": 28347,
      "length": 180,
      "embeddingIndex": 56
    },
    {
      "text": "ation, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28168,
      "endIndex": 28347,
      "length": 179,
      "embeddingIndex": 57
    },
    {
      "text": "tion, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28169,
      "endIndex": 28347,
      "length": 178,
      "embeddingIndex": 58
    },
    {
      "text": "ion, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28170,
      "endIndex": 28347,
      "length": 177,
      "embeddingIndex": 59
    },
    {
      "text": "on, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28171,
      "endIndex": 28347,
      "length": 176,
      "embeddingIndex": 60
    },
    {
      "text": "n, API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28172,
      "endIndex": 28347,
      "length": 175,
      "embeddingIndex": 61
    },
    {
      "text": ", API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28173,
      "endIndex": 28347,
      "length": 174,
      "embeddingIndex": 62
    },
    {
      "text": "API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28174,
      "endIndex": 28347,
      "length": 172,
      "embeddingIndex": 63
    },
    {
      "text": "API endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28175,
      "endIndex": 28347,
      "length": 172,
      "embeddingIndex": 64
    },
    {
      "text": "PI endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28176,
      "endIndex": 28347,
      "length": 171,
      "embeddingIndex": 65
    },
    {
      "text": "I endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28177,
      "endIndex": 28347,
      "length": 170,
      "embeddingIndex": 66
    },
    {
      "text": "endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28178,
      "endIndex": 28347,
      "length": 168,
      "embeddingIndex": 67
    },
    {
      "text": "endpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28179,
      "endIndex": 28347,
      "length": 168,
      "embeddingIndex": 68
    },
    {
      "text": "ndpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28180,
      "endIndex": 28347,
      "length": 167,
      "embeddingIndex": 69
    },
    {
      "text": "dpoints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28181,
      "endIndex": 28347,
      "length": 166,
      "embeddingIndex": 70
    },
    {
      "text": "points\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28182,
      "endIndex": 28347,
      "length": 165,
      "embeddingIndex": 71
    },
    {
      "text": "oints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28183,
      "endIndex": 28347,
      "length": 164,
      "embeddingIndex": 72
    },
    {
      "text": "ints\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28184,
      "endIndex": 28347,
      "length": 163,
      "embeddingIndex": 73
    },
    {
      "text": "nts\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28185,
      "endIndex": 28347,
      "length": 162,
      "embeddingIndex": 74
    },
    {
      "text": "ts\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28186,
      "endIndex": 28347,
      "length": 161,
      "embeddingIndex": 75
    },
    {
      "text": "s\n3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28187,
      "endIndex": 28347,
      "length": 160,
      "embeddingIndex": 76
    },
    {
      "text": "3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28188,
      "endIndex": 28347,
      "length": 158,
      "embeddingIndex": 77
    },
    {
      "text": "3: FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28189,
      "endIndex": 28347,
      "length": 158,
      "embeddingIndex": 78
    },
    {
      "text": ": FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28190,
      "endIndex": 28347,
      "length": 157,
      "embeddingIndex": 79
    },
    {
      "text": "FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28191,
      "endIndex": 28347,
      "length": 155,
      "embeddingIndex": 80
    },
    {
      "text": "FrontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28192,
      "endIndex": 28347,
      "length": 155,
      "embeddingIndex": 81
    },
    {
      "text": "rontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28193,
      "endIndex": 28347,
      "length": 154,
      "embeddingIndex": 82
    },
    {
      "text": "ontendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28194,
      "endIndex": 28347,
      "length": 153,
      "embeddingIndex": 83
    },
    {
      "text": "ntendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28195,
      "endIndex": 28347,
      "length": 152,
      "embeddingIndex": 84
    },
    {
      "text": "tendWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28196,
      "endIndex": 28347,
      "length": 151,
      "embeddingIndex": 85
    },
    {
      "text": "endWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28197,
      "endIndex": 28347,
      "length": 150,
      "embeddingIndex": 86
    },
    {
      "text": "ndWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28198,
      "endIndex": 28347,
      "length": 149,
      "embeddingIndex": 87
    },
    {
      "text": "dWeeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28199,
      "endIndex": 28347,
      "length": 148,
      "embeddingIndex": 88
    },
    {
      "text": "Weeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28200,
      "endIndex": 28347,
      "length": 147,
      "embeddingIndex": 89
    },
    {
      "text": "eeks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28201,
      "endIndex": 28347,
      "length": 146,
      "embeddingIndex": 90
    },
    {
      "text": "eks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28202,
      "endIndex": 28347,
      "length": 145,
      "embeddingIndex": 91
    },
    {
      "text": "ks 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28203,
      "endIndex": 28347,
      "length": 144,
      "embeddingIndex": 92
    },
    {
      "text": "s 5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28204,
      "endIndex": 28347,
      "length": 143,
      "embeddingIndex": 93
    },
    {
      "text": "5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28205,
      "endIndex": 28347,
      "length": 141,
      "embeddingIndex": 94
    },
    {
      "text": "5-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28206,
      "endIndex": 28347,
      "length": 141,
      "embeddingIndex": 95
    },
    {
      "text": "-6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28207,
      "endIndex": 28347,
      "length": 140,
      "embeddingIndex": 96
    },
    {
      "text": "6Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28208,
      "endIndex": 28347,
      "length": 139,
      "embeddingIndex": 97
    },
    {
      "text": "Document management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28209,
      "endIndex": 28347,
      "length": 138,
      "embeddingIndex": 98
    },
    {
      "text": "ocument management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28210,
      "endIndex": 28347,
      "length": 137,
      "embeddingIndex": 99
    },
    {
      "text": "cument management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28211,
      "endIndex": 28347,
      "length": 136,
      "embeddingIndex": 100
    },
    {
      "text": "ument management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28212,
      "endIndex": 28347,
      "length": 135,
      "embeddingIndex": 101
    },
    {
      "text": "ment management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28213,
      "endIndex": 28347,
      "length": 134,
      "embeddingIndex": 102
    },
    {
      "text": "ent management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28214,
      "endIndex": 28347,
      "length": 133,
      "embeddingIndex": 103
    },
    {
      "text": "nt management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28215,
      "endIndex": 28347,
      "length": 132,
      "embeddingIndex": 104
    },
    {
      "text": "t management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28216,
      "endIndex": 28347,
      "length": 131,
      "embeddingIndex": 105
    },
    {
      "text": "management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28217,
      "endIndex": 28347,
      "length": 129,
      "embeddingIndex": 106
    },
    {
      "text": "management UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28218,
      "endIndex": 28347,
      "length": 129,
      "embeddingIndex": 107
    },
    {
      "text": "anagement UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28219,
      "endIndex": 28347,
      "length": 128,
      "embeddingIndex": 108
    },
    {
      "text": "nagement UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28220,
      "endIndex": 28347,
      "length": 127,
      "embeddingIndex": 109
    },
    {
      "text": "agement UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28221,
      "endIndex": 28347,
      "length": 126,
      "embeddingIndex": 110
    },
    {
      "text": "gement UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28222,
      "endIndex": 28347,
      "length": 125,
      "embeddingIndex": 111
    },
    {
      "text": "ement UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28223,
      "endIndex": 28347,
      "length": 124,
      "embeddingIndex": 112
    },
    {
      "text": "ment UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28224,
      "endIndex": 28347,
      "length": 123,
      "embeddingIndex": 113
    },
    {
      "text": "ent UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28225,
      "endIndex": 28347,
      "length": 122,
      "embeddingIndex": 114
    },
    {
      "text": "nt UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28226,
      "endIndex": 28347,
      "length": 121,
      "embeddingIndex": 115
    },
    {
      "text": "t UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28227,
      "endIndex": 28347,
      "length": 120,
      "embeddingIndex": 116
    },
    {
      "text": "UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28228,
      "endIndex": 28347,
      "length": 118,
      "embeddingIndex": 117
    },
    {
      "text": "UI, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28229,
      "endIndex": 28347,
      "length": 118,
      "embeddingIndex": 118
    },
    {
      "text": "I, Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28230,
      "endIndex": 28347,
      "length": 117,
      "embeddingIndex": 119
    },
    {
      "text": ", Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28231,
      "endIndex": 28347,
      "length": 116,
      "embeddingIndex": 120
    },
    {
      "text": "Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28232,
      "endIndex": 28347,
      "length": 114,
      "embeddingIndex": 121
    },
    {
      "text": "Enhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28233,
      "endIndex": 28347,
      "length": 114,
      "embeddingIndex": 122
    },
    {
      "text": "nhanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28234,
      "endIndex": 28347,
      "length": 113,
      "embeddingIndex": 123
    },
    {
      "text": "hanced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28235,
      "endIndex": 28347,
      "length": 112,
      "embeddingIndex": 124
    },
    {
      "text": "anced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28236,
      "endIndex": 28347,
      "length": 111,
      "embeddingIndex": 125
    },
    {
      "text": "nced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28237,
      "endIndex": 28347,
      "length": 110,
      "embeddingIndex": 126
    },
    {
      "text": "ced chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28238,
      "endIndex": 28347,
      "length": 109,
      "embeddingIndex": 127
    },
    {
      "text": "ed chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28239,
      "endIndex": 28347,
      "length": 108,
      "embeddingIndex": 128
    },
    {
      "text": "d chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28240,
      "endIndex": 28347,
      "length": 107,
      "embeddingIndex": 129
    },
    {
      "text": "chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28241,
      "endIndex": 28347,
      "length": 105,
      "embeddingIndex": 130
    },
    {
      "text": "chat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28242,
      "endIndex": 28347,
      "length": 105,
      "embeddingIndex": 131
    },
    {
      "text": "hat, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28243,
      "endIndex": 28347,
      "length": 104,
      "embeddingIndex": 132
    },
    {
      "text": "at, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28244,
      "endIndex": 28347,
      "length": 103,
      "embeddingIndex": 133
    },
    {
      "text": "t, Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28245,
      "endIndex": 28347,
      "length": 102,
      "embeddingIndex": 134
    },
    {
      "text": ", Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28246,
      "endIndex": 28347,
      "length": 101,
      "embeddingIndex": 135
    },
    {
      "text": "Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28247,
      "endIndex": 28347,
      "length": 99,
      "embeddingIndex": 136
    },
    {
      "text": "Knowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28248,
      "endIndex": 28347,
      "length": 99,
      "embeddingIndex": 137
    },
    {
      "text": "nowledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28249,
      "endIndex": 28347,
      "length": 98,
      "embeddingIndex": 138
    },
    {
      "text": "owledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28250,
      "endIndex": 28347,
      "length": 97,
      "embeddingIndex": 139
    },
    {
      "text": "wledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28251,
      "endIndex": 28347,
      "length": 96,
      "embeddingIndex": 140
    },
    {
      "text": "ledge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28252,
      "endIndex": 28347,
      "length": 95,
      "embeddingIndex": 141
    },
    {
      "text": "edge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28253,
      "endIndex": 28347,
      "length": 94,
      "embeddingIndex": 142
    },
    {
      "text": "dge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28254,
      "endIndex": 28347,
      "length": 93,
      "embeddingIndex": 143
    },
    {
      "text": "ge explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28255,
      "endIndex": 28347,
      "length": 92,
      "embeddingIndex": 144
    },
    {
      "text": "e explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28256,
      "endIndex": 28347,
      "length": 91,
      "embeddingIndex": 145
    },
    {
      "text": "explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28257,
      "endIndex": 28347,
      "length": 89,
      "embeddingIndex": 146
    },
    {
      "text": "explorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28258,
      "endIndex": 28347,
      "length": 89,
      "embeddingIndex": 147
    },
    {
      "text": "xplorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28259,
      "endIndex": 28347,
      "length": 88,
      "embeddingIndex": 148
    },
    {
      "text": "plorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28260,
      "endIndex": 28347,
      "length": 87,
      "embeddingIndex": 149
    },
    {
      "text": "lorer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28261,
      "endIndex": 28347,
      "length": 86,
      "embeddingIndex": 150
    },
    {
      "text": "orer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28262,
      "endIndex": 28347,
      "length": 85,
      "embeddingIndex": 151
    },
    {
      "text": "rer\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28263,
      "endIndex": 28347,
      "length": 84,
      "embeddingIndex": 152
    },
    {
      "text": "er\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28264,
      "endIndex": 28347,
      "length": 83,
      "embeddingIndex": 153
    },
    {
      "text": "r\n4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28265,
      "endIndex": 28347,
      "length": 82,
      "embeddingIndex": 154
    },
    {
      "text": "4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28266,
      "endIndex": 28347,
      "length": 80,
      "embeddingIndex": 155
    },
    {
      "text": "4: Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28267,
      "endIndex": 28347,
      "length": 80,
      "embeddingIndex": 156
    },
    {
      "text": ": Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28268,
      "endIndex": 28347,
      "length": 79,
      "embeddingIndex": 157
    },
    {
      "text": "Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28269,
      "endIndex": 28347,
      "length": 77,
      "embeddingIndex": 158
    },
    {
      "text": "Testing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28270,
      "endIndex": 28347,
      "length": 77,
      "embeddingIndex": 159
    },
    {
      "text": "esting & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28271,
      "endIndex": 28347,
      "length": 76,
      "embeddingIndex": 160
    },
    {
      "text": "sting & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28272,
      "endIndex": 28347,
      "length": 75,
      "embeddingIndex": 161
    },
    {
      "text": "ting & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28273,
      "endIndex": 28347,
      "length": 74,
      "embeddingIndex": 162
    },
    {
      "text": "ing & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28274,
      "endIndex": 28347,
      "length": 73,
      "embeddingIndex": 163
    },
    {
      "text": "ng & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28275,
      "endIndex": 28347,
      "length": 72,
      "embeddingIndex": 164
    },
    {
      "text": "g & RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28276,
      "endIndex": 28347,
      "length": 71,
      "embeddingIndex": 165
    },
    {
      "text": "& RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28277,
      "endIndex": 28347,
      "length": 69,
      "embeddingIndex": 166
    },
    {
      "text": "& RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28278,
      "endIndex": 28347,
      "length": 69,
      "embeddingIndex": 167
    },
    {
      "text": "RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28279,
      "endIndex": 28347,
      "length": 67,
      "embeddingIndex": 168
    },
    {
      "text": "RefinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28280,
      "endIndex": 28347,
      "length": 67,
      "embeddingIndex": 169
    },
    {
      "text": "efinementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28281,
      "endIndex": 28347,
      "length": 66,
      "embeddingIndex": 170
    },
    {
      "text": "finementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28282,
      "endIndex": 28347,
      "length": 65,
      "embeddingIndex": 171
    },
    {
      "text": "inementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28283,
      "endIndex": 28347,
      "length": 64,
      "embeddingIndex": 172
    },
    {
      "text": "nementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28284,
      "endIndex": 28347,
      "length": 63,
      "embeddingIndex": 173
    },
    {
      "text": "ementWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28285,
      "endIndex": 28347,
      "length": 62,
      "embeddingIndex": 174
    },
    {
      "text": "mentWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28286,
      "endIndex": 28347,
      "length": 61,
      "embeddingIndex": 175
    },
    {
      "text": "entWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28287,
      "endIndex": 28347,
      "length": 60,
      "embeddingIndex": 176
    },
    {
      "text": "ntWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28288,
      "endIndex": 28347,
      "length": 59,
      "embeddingIndex": 177
    },
    {
      "text": "tWeeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28289,
      "endIndex": 28347,
      "length": 58,
      "embeddingIndex": 178
    },
    {
      "text": "Weeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28290,
      "endIndex": 28347,
      "length": 57,
      "embeddingIndex": 179
    },
    {
      "text": "eeks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28291,
      "endIndex": 28347,
      "length": 56,
      "embeddingIndex": 180
    },
    {
      "text": "eks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28292,
      "endIndex": 28347,
      "length": 55,
      "embeddingIndex": 181
    },
    {
      "text": "ks 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28293,
      "endIndex": 28347,
      "length": 54,
      "embeddingIndex": 182
    },
    {
      "text": "s 7-8Testing, Performance optimization, Documentation",
      "startIndex": 28294,
      "endIndex": 28347,
      "length": 53,
      "embeddingIndex": 183
    },
    {
      "text": "7-8Testing, Performance optimization, Documentation",
      "startIndex": 28295,
      "endIndex": 28347,
      "length": 51,
      "embeddingIndex": 184
    },
    {
      "text": "7-8Testing, Performance optimization, Documentation",
      "startIndex": 28296,
      "endIndex": 28347,
      "length": 51,
      "embeddingIndex": 185
    },
    {
      "text": "-8Testing, Performance optimization, Documentation",
      "startIndex": 28297,
      "endIndex": 28347,
      "length": 50,
      "embeddingIndex": 186
    },
    {
      "text": "8Testing, Performance optimization, Documentation",
      "startIndex": 28298,
      "endIndex": 28347,
      "length": 49,
      "embeddingIndex": 187
    },
    {
      "text": "Testing, Performance optimization, Documentation",
      "startIndex": 28299,
      "endIndex": 28347,
      "length": 48,
      "embeddingIndex": 188
    },
    {
      "text": "esting, Performance optimization, Documentation",
      "startIndex": 28300,
      "endIndex": 28347,
      "length": 47,
      "embeddingIndex": 189
    },
    {
      "text": "sting, Performance optimization, Documentation",
      "startIndex": 28301,
      "endIndex": 28347,
      "length": 46,
      "embeddingIndex": 190
    },
    {
      "text": "ting, Performance optimization, Documentation",
      "startIndex": 28302,
      "endIndex": 28347,
      "length": 45,
      "embeddingIndex": 191
    },
    {
      "text": "ing, Performance optimization, Documentation",
      "startIndex": 28303,
      "endIndex": 28347,
      "length": 44,
      "embeddingIndex": 192
    },
    {
      "text": "ng, Performance optimization, Documentation",
      "startIndex": 28304,
      "endIndex": 28347,
      "length": 43,
      "embeddingIndex": 193
    },
    {
      "text": "g, Performance optimization, Documentation",
      "startIndex": 28305,
      "endIndex": 28347,
      "length": 42,
      "embeddingIndex": 194
    },
    {
      "text": ", Performance optimization, Documentation",
      "startIndex": 28306,
      "endIndex": 28347,
      "length": 41,
      "embeddingIndex": 195
    },
    {
      "text": "Performance optimization, Documentation",
      "startIndex": 28307,
      "endIndex": 28347,
      "length": 39,
      "embeddingIndex": 196
    },
    {
      "text": "Performance optimization, Documentation",
      "startIndex": 28308,
      "endIndex": 28347,
      "length": 39,
      "embeddingIndex": 197
    },
    {
      "text": "erformance optimization, Documentation",
      "startIndex": 28309,
      "endIndex": 28347,
      "length": 38,
      "embeddingIndex": 198
    },
    {
      "text": "rformance optimization, Documentation",
      "startIndex": 28310,
      "endIndex": 28347,
      "length": 37,
      "embeddingIndex": 199
    },
    {
      "text": "formance optimization, Documentation",
      "startIndex": 28311,
      "endIndex": 28347,
      "length": 36,
      "embeddingIndex": 200
    },
    {
      "text": "ormance optimization, Documentation",
      "startIndex": 28312,
      "endIndex": 28347,
      "length": 35,
      "embeddingIndex": 201
    },
    {
      "text": "rmance optimization, Documentation",
      "startIndex": 28313,
      "endIndex": 28347,
      "length": 34,
      "embeddingIndex": 202
    },
    {
      "text": "mance optimization, Documentation",
      "startIndex": 28314,
      "endIndex": 28347,
      "length": 33,
      "embeddingIndex": 203
    },
    {
      "text": "ance optimization, Documentation",
      "startIndex": 28315,
      "endIndex": 28347,
      "length": 32,
      "embeddingIndex": 204
    },
    {
      "text": "nce optimization, Documentation",
      "startIndex": 28316,
      "endIndex": 28347,
      "length": 31,
      "embeddingIndex": 205
    },
    {
      "text": "ce optimization, Documentation",
      "startIndex": 28317,
      "endIndex": 28347,
      "length": 30,
      "embeddingIndex": 206
    },
    {
      "text": "e optimization, Documentation",
      "startIndex": 28318,
      "endIndex": 28347,
      "length": 29,
      "embeddingIndex": 207
    },
    {
      "text": "optimization, Documentation",
      "startIndex": 28319,
      "endIndex": 28347,
      "length": 27,
      "embeddingIndex": 208
    },
    {
      "text": "optimization, Documentation",
      "startIndex": 28320,
      "endIndex": 28347,
      "length": 27,
      "embeddingIndex": 209
    },
    {
      "text": "ptimization, Documentation",
      "startIndex": 28321,
      "endIndex": 28347,
      "length": 26,
      "embeddingIndex": 210
    },
    {
      "text": "timization, Documentation",
      "startIndex": 28322,
      "endIndex": 28347,
      "length": 25,
      "embeddingIndex": 211
    },
    {
      "text": "imization, Documentation",
      "startIndex": 28323,
      "endIndex": 28347,
      "length": 24,
      "embeddingIndex": 212
    },
    {
      "text": "mization, Documentation",
      "startIndex": 28324,
      "endIndex": 28347,
      "length": 23,
      "embeddingIndex": 213
    },
    {
      "text": "ization, Documentation",
      "startIndex": 28325,
      "endIndex": 28347,
      "length": 22,
      "embeddingIndex": 214
    },
    {
      "text": "zation, Documentation",
      "startIndex": 28326,
      "endIndex": 28347,
      "length": 21,
      "embeddingIndex": 215
    },
    {
      "text": "ation, Documentation",
      "startIndex": 28327,
      "endIndex": 28347,
      "length": 20,
      "embeddingIndex": 216
    },
    {
      "text": "tion, Documentation",
      "startIndex": 28328,
      "endIndex": 28347,
      "length": 19,
      "embeddingIndex": 217
    },
    {
      "text": "ion, Documentation",
      "startIndex": 28329,
      "endIndex": 28347,
      "length": 18,
      "embeddingIndex": 218
    },
    {
      "text": "on, Documentation",
      "startIndex": 28330,
      "endIndex": 28347,
      "length": 17,
      "embeddingIndex": 219
    },
    {
      "text": "n, Documentation",
      "startIndex": 28331,
      "endIndex": 28347,
      "length": 16,
      "embeddingIndex": 220
    },
    {
      "text": ", Documentation",
      "startIndex": 28332,
      "endIndex": 28347,
      "length": 15,
      "embeddingIndex": 221
    },
    {
      "text": "Documentation",
      "startIndex": 28333,
      "endIndex": 28347,
      "length": 13,
      "embeddingIndex": 222
    },
    {
      "text": "Documentation",
      "startIndex": 28334,
      "endIndex": 28347,
      "length": 13,
      "embeddingIndex": 223
    },
    {
      "text": "ocumentation",
      "startIndex": 28335,
      "endIndex": 28347,
      "length": 12,
      "embeddingIndex": 224
    },
    {
      "text": "cumentation",
      "startIndex": 28336,
      "endIndex": 28347,
      "length": 11,
      "embeddingIndex": 225
    },
    {
      "text": "umentation",
      "startIndex": 28337,
      "endIndex": 28347,
      "length": 10,
      "embeddingIndex": 226
    },
    {
      "text": "mentation",
      "startIndex": 28338,
      "endIndex": 28347,
      "length": 9,
      "embeddingIndex": 227
    },
    {
      "text": "entation",
      "startIndex": 28339,
      "endIndex": 28347,
      "length": 8,
      "embeddingIndex": 228
    },
    {
      "text": "ntation",
      "startIndex": 28340,
      "endIndex": 28347,
      "length": 7,
      "embeddingIndex": 229
    },
    {
      "text": "tation",
      "startIndex": 28341,
      "endIndex": 28347,
      "length": 6,
      "embeddingIndex": 230
    },
    {
      "text": "ation",
      "startIndex": 28342,
      "endIndex": 28347,
      "length": 5,
      "embeddingIndex": 231
    },
    {
      "text": "tion",
      "startIndex": 28343,
      "endIndex": 28347,
      "length": 4,
      "embeddingIndex": 232
    },
    {
      "text": "ion",
      "startIndex": 28344,
      "endIndex": 28347,
      "length": 3,
      "embeddingIndex": 233
    },
    {
      "text": "on",
      "startIndex": 28345,
      "endIndex": 28347,
      "length": 2,
      "embeddingIndex": 234
    },
    {
      "text": "n",
      "startIndex": 28346,
      "endIndex": 28347,
      "length": 1,
      "embeddingIndex": 235
    }
  ]
}